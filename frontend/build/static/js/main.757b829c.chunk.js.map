{"version":3,"sources":["assets/jobr-example.png","assets/jobr-example-mobile.png","assets/jobr-logo.png","../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.//.*/.json$","components/common/PageContainer.js","components/common/Footer.js","components/common/Home.js","lib/auth.js","components/common/Navbar.js","components/common/ErrorPage.js","utils/useForm.js","components/common/FormWrapper.js","components/common/FormInput.js","components/common/FormButton.js","lib/api.js","components/auth/Login.js","components/auth/Register.js","lib/boardViews.js","lib/mobileViews.js","lib/smallTabletViews.js","lib/largeTabletViews.js","utils/useWindowSize.js","components/jobs/JobIndexCard.js","components/jobs/JobIndexBoard.js","components/common/DeleteConfirmModal.js","lib/statusOptions.js","components/jobs/JobForm.js","components/jobs/JobNew.js","components/jobs/JobNewModal.js","components/jobs/JobIndex.js","components/jobs/JobDetails.js","components/jobs/JobRelatedTasks.js","components/jobs/JobRelatedContacts.js","components/jobs/JobShow.js","utils/useFetch.js","components/jobs/JobEdit.js","components/common/AddButton.js","components/common/GetDate.js","components/tasks/TaskCategories.js","components/common/TaskLabel.js","components/tasks/TaskShowCard.js","components/tasks/TaskShow.js","components/tasks/TaskFormComputer.js","components/tasks/TaskEditComputer.js","components/tasks/TaskAddComputer.js","components/tasks/TaskIndex.js","utils/useDelete.js","components/tasks/TaskFormMobile.js","components/tasks/TaskEditMobile.js","components/tasks/TaskAddMobile.js","components/contacts/ContactCard.js","components/contacts/ContactNewModal.js","components/contacts/ContactIndex.js","components/resources/ResourceCard.js","components/resources/ResourceNewModal.js","components/resources/ResourceIndex.js","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","PageContainer","children","className","Footer","Home","Header","as","Image","src","exampleImage","size","exampleImageMobile","setToken","token","window","localStorage","setItem","getToken","getItem","logout","removeItem","getPayload","parts","split","length","JSON","parse","atob","isAuthenticated","payload","Math","round","Date","now","exp","Navbar","handleLogout","props","history","push","Sticky","Menu","position","borderless","Container","Dropdown","item","simple","text","to","Item","Divider","onClick","this","logo","alt","React","Component","withRouter","ErrorPage","useForm","initialFormState","submitFunction","submitParams","onSubmitSuccess","useState","formData","setFormData","formErrors","setFormErrors","handleChange","target","name","value","type","completed","newValue","updatedFormData","updatedErrors","selectDropdown","event","result","handleDateChange","data","date","getTime","getTimezoneOffset","toISOString","formattedDate","handleSubmit","a","preventDefault","response","console","log","FormWrapper","textAlign","verticalAlign","titleSize","color","formTitle","onSubmit","FormInput","error","fluidIcon","iconPosition","placeholder","onChange","Form","Input","fluid","icon","FormButton","fluidSize","buttonText","Button","basic","content","withHeaders","headers","Authorization","registerUser","axios","post","getAllJobs","get","addNewJob","getSingleJob","editJob","put","addNewTask","editTask","deleteTask","delete","addNewContact","addNewResource","Login","useHistory","formError","setError","email","password","res","formWidth","Register","username","first_name","last_name","password_confirmation","mobileView","isHidden","smallTabletView","largeTabletView","desktopView","wishlistView","appliedView","interviewView","offerView","rejectedView","smallTabletViewTwo","smallTabletViewThree","smallTabletViewFour","smallTabletViewFive","largeTabletViewTwo","largeTabletViewThree","largeTabletViewFour","largeTabletViewFive","useWindowSize","isClient","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","JobIndexCard","handleDeleteConfirmModal","jobTitle","job_title","company","city","country","drag","draggable","onDragStart","Icon","JobIndexBoard","jobData","status","handleBoardChangeMobile","handleNewJobModal","drop","dragEvent","dataTransfer","setData","animated","Content","visible","hidden","onDrop","onDragOver","job","toUpperCase","key","DeleteConfirmModal","deleteModalOpen","nameOfThingToDelete","handleCloseDeleteConfirm","handleDelete","Modal","open","Actions","inverted","statusOptions","JobForm","errors","formHeaderText","options","Segment","Group","Grid","stackable","columns","Row","Column","Field","only","datePickerOnly","clearable","format","application_deadline","application_submitted","stretched","interview_date","job_url","job_offer_date","salary","selection","offer_acceptance_date","TextArea","description","offer_accepted","JobNew","handleNewJobModalClose","newJobStatus","parseInt","JobNewModal","addNewModalOpen","JobIndex","jobs","setJobs","statuses","setStatuses","currentSmallTabletView","setCurrentSmallTabletView","currentLargeTabletView","setCurrentLargeTabletView","setDeleteModalOpen","jobToDelete","setJobToDelete","setAddNewModalOpen","setNewJobStatus","getData","currentTarget","handleDeleteJob","handleBoardChangeSmallTablet","handleBoardChangeLargeTablet","dropEvent","persist","jobId","jobToUpdate","newStatus","JobDetails","href","rel","JobRelatedTasks","divided","related_tasks","task","title","Meta","task_category","Description","notes","JobRelatedContacts","related_contacts","contact","phone","JobShow","setJob","useParams","panes","menuItem","displayName","render","Tab","Pane","attached","getJobData","menu","secondary","pointing","initialState","loading","useFetch","request","params","state","setState","JobEdit","AddButton","GetDate","today_date","formatted_today_date","today_date_with_time","formatted_date","microSecondsDiff","abs","floor","taskCategories","label","TaskLabel","category","string","filteredCategory","array","filter","filterCategories","Label","TaskShowCard","toggleCheckbox","toggleForm","Card","Checkbox","checked","TaskShow","added_date","reminder_date","TaskFormComputer","jobOptions","deleteItem","closeForm","taskPlaceholder","search","reverse","TaskEditComputer","setTask","getJobsData","TaskAddComputer","TaskIndex","tasks","setTasks","formVisible","showForm","addFormVisible","showAddForm","taskToDelete","setTaskToDelete","setSearch","filterTasks","taskId","filteredTasks","scrollTo","sortedTasks","regexp","RegExp","test","searchTasks","sort","b","uncompletedTasks","completedTasks","aria-hidden","useDelete","deleteFunction","deleteId","page","TaskFormMobile","TaskEditMobile","TaskAddMobile","ContactCard","ContactNewModal","modalOpen","handleModalOpen","handleModalClose","onClose","trigger","closeIcon","focus","ContactIndex","contacts","setContacts","setModalOpen","contactToDelete","setContactToDelete","jobsRes","handleDeleteContact","filteredContacts","ResourceCard","url","ResourceNewModal","ResourceIndex","resources","setResources","resourceToDelete","setResourceToDelete","handleDeleteResource","resource","link","filteredResources","App","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.757b829c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jobr-example.e458a60a.png\";","module.exports = __webpack_public_path__ + \"static/media/jobr-example-mobile.2a5e5cdd.png\";","module.exports = __webpack_public_path__ + \"static/media/jobr-logo.69ae7699.png\";","var map = {\n\t\"./bg-BG.json\": 487,\n\t\"./ca-ES.json\": 488,\n\t\"./cs-CZ.json\": 489,\n\t\"./de-DE.json\": 490,\n\t\"./en-US.json\": 254,\n\t\"./es-ES.json\": 491,\n\t\"./fi-FL.json\": 492,\n\t\"./fr-FR.json\": 493,\n\t\"./he-IL.json\": 494,\n\t\"./it-IT.json\": 495,\n\t\"./ja-JP.json\": 496,\n\t\"./nb-NO.json\": 497,\n\t\"./pl-PL.json\": 498,\n\t\"./pt-BR.json\": 499,\n\t\"./ru-RU.json\": 500,\n\t\"./sv-SE.json\": 501,\n\t\"./tr-TR.json\": 502,\n\t\"./zh-CN.json\": 503\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 486;","import React from 'react'\n\nfunction PageContainer({ children }) {\n  return (\n    <section className='section'>\n      {children}\n    </section>\n  )\n}\n\nexport default PageContainer","import React from 'react'\n\nfunction Footer () {\n  return (\n    <footer className='footer'>\n      <p>Made by Andy, Emma and Katie | GA 2020</p>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Header, Image } from 'semantic-ui-react'\n\nimport PageContainer from './PageContainer'\nimport Footer from './Footer'\nimport exampleImage from '../../assets/jobr-example.png'\nimport exampleImageMobile from '../../assets/jobr-example-mobile.png'\n\nconst Home = () => {\n\n  return (\n    <PageContainer>\n      <div className='home'>\n        <div className='hero'>\n          <Header as='h1'>JOBR</Header>\n          <Header as='h2'>Take the work out of the job search</Header>\n        </div>\n        <p>Finding a job can be a stressful and time-consuming process. JOBR helps make it just a bit easier by providing one platform to organise, prioritise and track your job search. Use JOBR to create your own job board to store and update applications as they progress through various stages, from your initial search to when you finally land the offer.</p>\n        <div className='image-desktop'>\n          <Image src={exampleImage} size='massive' />\n        </div>\n        <div className='image-mobile'>\n          <Image src={exampleImageMobile} size='massive' />\n        </div>\n        <p>Let JOBR take the work out of your job search so you can focus on landing that offer!</p>\n      </div>\n      <Footer />\n    </PageContainer>\n  )\n}\n\nexport default Home","//* Function to set users token when logged in local sotrage\nexport const setToken = token => {\n  window.localStorage.setItem('token', token)\n}\n\nexport const getToken = () => {\n  return window.localStorage.getItem('token')\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token')\n}\n\nexport const getPayload = () => { // * returns the decoded data from the token or false\n  const token = getToken()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 3) return false\n  return JSON.parse(window.atob(parts[1]))\n}\n\nexport const isOwner = id => {\n  const userId = getPayload().sub\n  return id === userId\n}\n\nexport const getUserId = () => {\n  return getPayload().sub\n}\n\nexport const isAuthenticated = () => {\n  const payload = getPayload()\n  if (!payload) return false\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {\n  Container,\n  Menu,\n  Dropdown,\n  Image, Sticky\n} from 'semantic-ui-react'\nimport logo from '../../assets/jobr-logo.png'\nimport { logout, isAuthenticated } from '../../lib/auth'\n\n\n\nclass Navbar extends React.Component {\n\n\n  handleLogout = () => {\n    logout()\n    this.props.history.push('/')\n  }\n\n\n  render() {\n    return (\n      <Sticky>\n        <Menu size='small' position='right' borderless >\n          <Container >\n            <Dropdown item simple text='Menu' >\n              <Dropdown.Menu>\n                {isAuthenticated() &&\n                  <>\n                    <Link to='/jobs'>\n                      <Dropdown.Item id='navbar-btn1' >\n                        Jobs\n                      </Dropdown.Item>\n                    </Link>\n                    <Link to='/tasks'>\n                      <Dropdown.Item id='navbar-btn2'>\n                        Tasks\n                      </Dropdown.Item>\n                    </Link>\n                    <Link to='/contacts'>\n                      <Dropdown.Item id='navbar-btn3'>\n                        Contacts\n                      </Dropdown.Item>\n                    </Link>\n                    <Link to='/resources'>\n                      <Dropdown.Item id='navbar-btn4'>\n                        Resources\n                      </Dropdown.Item>\n                    </Link>\n                  </>}\n                <Dropdown.Divider />\n                <Dropdown.Header id='navbar-account'>Account</Dropdown.Header>\n                {!isAuthenticated() &&\n                  <>\n                    <Link to='/login'>\n                      <Dropdown.Item id='navbar-btn5'>\n                        Log In\n                      </Dropdown.Item>\n                    </Link>\n                    <Link to='/register'>\n                      <Dropdown.Item id='navbar-btn6'>\n                        Register\n                      </Dropdown.Item>\n                    </Link>\n                  </>}\n                {isAuthenticated() && <Dropdown.Item onClick={this.handleLogout} >\n                  Log Out\n                </Dropdown.Item>}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Item id='navbar-logo' position='right'>\n              <Link to='/'>\n                <Image size='tiny' src={logo} alt='jobr-logo' />\n              </Link>\n            </Menu.Item>\n          </Container>\n        </Menu>\n      </Sticky >\n    )\n  }\n}\n\nexport default withRouter(Navbar)","import React from 'react'\n\nfunction ErrorPage() {\n\n  return (\n    <div className='ErrorPage'>\n      <h1 className=\"error-message\">Oops, Looks like something went wrong...</h1>\n    </div>\n  )\n}\nexport default ErrorPage","/* eslint-disable camelcase */\nimport React from 'react'\n\nfunction useForm(initialFormState = {}, submitFunction, submitParams = null, onSubmitSuccess = () => {}) {\n\n  // * Initial state \n  const [formData, setFormData] = React.useState(initialFormState)\n  const [formErrors, setFormErrors] = React.useState(initialFormState)\n\n\n  //* HandleChange event for inputting values on form & sets them and the errors to state \n  const handleChange = ({ target: { name, value, type, completed } }) => {\n    const newValue = (type === 'checkbox' ? completed : value)   \n    const updatedFormData = { ...formData, [name]: newValue }\n    const updatedErrors = { ...formErrors, [name]: '' }\n\n    setFormData(updatedFormData)\n    setFormErrors(updatedErrors)\n  }\n\n  //* HandleChange event for inputting values on form & sets them to state \n  const selectDropdown = (event, result ) => {\n    const { name, value } = result   \n    setFormData({ ...formData, [name]: value })\n  }\n\n  const handleDateChange = (event, data) => {\n    const { name, value } = data \n    const formattedDate = (value) => {\n      if (!value) {\n        return null\n      } else {\n        return (new Date(value.getTime() - (value.getTimezoneOffset() * 60000))).toISOString().split('T')[0]\n      }\n    }\n\n    const date = formattedDate(value)\n\n    setFormData({ ...formData, [name]: date })\n  }\n\n\n  const handleSubmit = async event => {\n    event.preventDefault()    \n    // console.log(formData)\n    \n    try {\n      const response = await submitFunction(formData,submitParams)\n      onSubmitSuccess(response)\n    } catch (err) {\n      console.log(err)\n      setFormErrors(err.response.data)\n    }\n  }\n  \n  return { formData, handleChange, selectDropdown, handleDateChange, setFormData, formErrors, setFormErrors, handleSubmit }\n}\nexport default useForm","import React from 'react'\nimport { Grid, Form, Header } from 'semantic-ui-react'\n\nfunction FormWrapper({ textAlign, verticalAlign, titleSize, color, formTitle, onSubmit, children }) {\n  return (\n\n    // !NOTE - if we want to change the height & maxWidth to props, have issues due to the double {{}} - I can always move the Grid & Grid.column back to the actual form pages if better \n    <Grid textAlign={textAlign} style={{ height: '100vh' }} verticalAlign={verticalAlign}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header id=\"header-font\" as={titleSize} color={color}>{formTitle}</Header>\n        <Form\n          size='large'\n          onSubmit={onSubmit}\n        >\n          {children}\n        </Form>\n      </Grid.Column>\n    </Grid>\n\n  )\n}\nexport default FormWrapper","import React from 'react'\nimport { Form } from 'semantic-ui-react'\n\nfunction FormInput( {  error, fluidIcon, iconPosition, type, name, value, placeholder, onChange, size }) {\n  \n  return (\n    <Form.Input \n      error={ error ? error : null }\n      size={size}\n      fluid icon={fluidIcon}\n      iconPosition={iconPosition}\n      type={type}\n      placeholder={placeholder}\n      name={name}\n      value={value}\n      onChange={onChange}\n    />\n  )\n}\n\nexport default FormInput","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nfunction FormButton({ fluidSize, color, buttonText, type }) {\n  return (\n    <Button\n      id=\"form-button\"\n      fluid size={fluidSize}\n      basic color={color}\n      content={buttonText}\n      type={type}\n    />\n  )\n}\n\nexport default FormButton","import axios from 'axios'\nimport { getToken } from './auth'\n\nconst baseUrl = '/api'\n\nconst withHeaders = () => {\n  return {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  }\n}\n\n\n//* USER REQUESTS\n\nexport const loginUser = data => {\n  return axios.post(`${baseUrl}/auth/login/`, data)\n}\n\nexport const registerUser = (data) => {\n  return axios.post(`${baseUrl}/auth/register/`, data)\n}\n\n// * JOB REQUESTS\n\nexport const getAllJobs = () => {\n  return axios.get(`${baseUrl}/jobs/`, withHeaders())\n}\n\nexport const addNewJob = data => {\n  return axios.post(`${baseUrl}/jobs/`, data, withHeaders())\n}\n\nexport const getSingleJob = id => {\n  return axios.get(`${baseUrl}/jobs/${id}/`, withHeaders())\n}\n\nexport const editJob = (data, id) => {\n  return axios.put(`${baseUrl}/jobs/${id}/`, data, withHeaders())\n}\n\nexport const deleteJob = id => {\n  return axios.delete(`${baseUrl}/jobs/${id}/`, withHeaders())\n}\n\n// * TASK REQUESTS\n\nexport const getAllTasks = () => {\n  return axios.get(`${baseUrl}/tasks/`, withHeaders())\n}\n\nexport const getSingleTask = id => {\n  return axios.get(`${baseUrl}/tasks/${id}`, withHeaders())\n}\n\nexport const addNewTask = data => {\n  return axios.post(`${baseUrl}/tasks/`, data, withHeaders())\n}\n\nexport const editTask =  (data, id) => {\n  return axios.put(`${baseUrl}/tasks/${id}/`, data, withHeaders())\n}\n\nexport const deleteTask = id => {\n  return axios.delete(`${baseUrl}/tasks/${id}/`, withHeaders())\n}\n\n\n// * CONTACTS REQUESTS\n\nexport const getAllContacts = () => {\n  return axios.get(`${baseUrl}/contacts/`, withHeaders())\n}\n\nexport const addNewContact = data => {\n  return axios.post(`${baseUrl}/contacts/`, data,  withHeaders())\n}\n\nexport const deleteContact = id => {\n  return axios.delete(`${baseUrl}/contacts/${id}/`, withHeaders())\n}\n\n\n// * RESOURCES REQUESTS\n\nexport const getAllResources = () => {\n  return axios.get(`${baseUrl}/resources/`, withHeaders())\n}\n\nexport const addNewResource = data => {\n  return axios.post(`${baseUrl}/resources/`, data, withHeaders())\n}\n\nexport const deleteResource = id => {\n  return axios.delete(`${baseUrl}/resources/${id}/`, withHeaders())\n}","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport useForm from '../../utils/useForm'\nimport FormWrapper from '../common/FormWrapper'\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport { loginUser } from '../../lib/api'\nimport { setToken } from '../../lib/auth'\n\nfunction Login() {\n  const history = useHistory()\n  const [formError, setError] = useState(null)\n  \n  //* 'State' & props for useForm \n  const { formData, handleChange } = useForm({\n    email: '',\n    password: ''\n  })\n\n\n  //* HandleSubmit event for submitting the login form\n  const handleSubmit = async event => {\n    event.preventDefault()\n    try {\n      const res = await loginUser(formData)\n      setToken(res.data.token)\n      history.push('/jobs')\n    } catch (err) {\n      setError('Invalid Credentials' )\n    }\n  }\n\n  return (\n    <div className='Login'>\n      <FormWrapper \n        textAlign='center'\n        verticalAlign='middle'\n        formWidth='450'\n        titleSize='h1'\n        color='pink'\n        formTitle='Login Here'\n        onSubmit={handleSubmit}>\n        <FormInput \n          error={formError}\n          fluidIcon = 'envelope'\n          iconPosition = 'left'\n          placeholder= 'Email address'\n          value = {formData.email || ''}\n          type = 'text'\n          name = 'email'\n          onChange={handleChange}\n        />\n        <FormInput\n          error={formError}\n          fluidIcon ='lock'\n          iconPosition ='left'\n          placeholder='Password'\n          value={formData.password || ''}\n          type='password'\n          name='password'\n          onChange={handleChange}\n        />\n        <FormButton\n          fluidSize='large'\n          color='pink'\n          buttonText='Login Now' \n          type='submit'\n        ></FormButton>\n        <p>Dont have an account?<Link to=\"/register\"> Sign Up</Link></p>\n      </FormWrapper>\n    </div>\n  )\n}\nexport default Login","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport useForm from '../../utils/useForm'\nimport FormWrapper from '../common/FormWrapper'\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport { registerUser } from '../../lib/api'\nimport { setToken } from '../../lib/auth'\n\nfunction Register() {\n  const history = useHistory()\n\n  const onSubmitSuccess = response => {\n    setToken(response.data.token)\n    history.push('/jobs')\n  }\n\n  //* initalFormState & props for useForm hook\n  const { formData,  handleChange, formErrors, handleSubmit } = useForm({\n    username: '',\n    first_name: '', \n    last_name: '', \n    email: '',\n    password: '',\n    password_confirmation: ''\n  }, registerUser, null , onSubmitSuccess )\n  \n  return (\n    <FormWrapper \n      textAlign='center'\n      verticalAlign='middle'\n      formWidth='450'\n      titleSize='h1'\n      color='pink'\n      formTitle='Register Here'\n      onSubmit={handleSubmit}\n    >\n      <FormInput \n        error={formErrors.username}\n        fluidIcon = 'user'\n        iconPosition = 'left'\n        placeholder= 'Username'\n        value = {formData.username || ''}\n        type = 'text'\n        name = 'username'\n        onChange={handleChange}\n      />\n      <FormInput \n        error={formErrors.first_name}\n        fluidIcon = 'address card outline'\n        iconPosition = 'left'\n        placeholder= 'First Name'\n        value = {formData.first_name || ''}\n        type = 'text'\n        name = 'first_name'\n        onChange={handleChange}\n      />\n      <FormInput \n        error={formErrors.last_name}\n        fluidIcon = 'address card'\n        iconPosition = 'left'\n        placeholder= 'Last Name'\n        value = {formData.last_name || ''}\n        type = 'text'\n        name = 'last_name'\n        onChange={handleChange}\n      />\n      <FormInput \n        error={formErrors.email}\n        fluidIcon = 'envelope'\n        iconPosition = 'left'\n        placeholder= 'Email address'\n        value = {formData.email || ''}\n        type = 'text'\n        name = 'email'\n        onChange={handleChange}\n      />\n      <FormInput\n        error={formErrors.password}\n        fluidIcon ='lock'\n        iconPosition ='left'\n        placeholder='Password'\n        value={formData.password || ''}\n        type='password'\n        name='password'\n        onChange={handleChange}\n      />\n      <FormInput\n        error={formErrors.password_confirmation}\n        fluidIcon ='lock'\n        iconPosition ='left'\n        placeholder='Password Confirmation'\n        value={formData.password_confirmation || ''}\n        type='password'\n        name='password_confirmation'\n        onChange={handleChange}\n      />\n      <FormButton\n        fluidSize='large'\n        color='pink'\n        buttonText='Register Now' \n        type='submit'\n      ></FormButton>\n      <p>Already have an account?<Link to=\"/login\"> Log In</Link></p>\n    </FormWrapper>\n  )\n}\nexport default Register","export const mobileView = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: true,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: true\n    ,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: true,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true,\n    id: 5\n  } \n]\n\nexport const smallTabletView = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: true,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: true,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true,\n    id: 5\n  } \n]\n\nexport const largeTabletView = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: true,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true,\n    id: 5\n  } \n]\n\nexport const desktopView = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: false,\n    id: 5\n  } \n]\n\n\n\n","\nexport const wishlistView = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1 \n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: true \n  } \n]\n\nexport const appliedView = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: true \n  } \n]\n\nexport const interviewView = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3 \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: true \n  } \n]\n\nexport const offerView = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true \n  } \n]\n\nexport const rejectedView = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: false,\n    id: 5\n  } \n]","export const smallTabletViewOne = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: true \n  } \n]\n\nexport const smallTabletViewTwo = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: true\n  } \n]\n\nexport const smallTabletViewThree = [\n  { \n    name: 'wishlist',\n    isHidden: true\n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true\n  } \n]\n\nexport const smallTabletViewFour = [\n  { \n    name: 'wishlist',\n    isHidden: true \n  }, \n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: false\n    ,\n    id: 5\n  } \n]\n\nexport const smallTabletViewFive = [\n  { \n    name: 'applied',\n    isHidden: true\n  }, \n  { \n    name: 'interview',\n    isHidden: true \n  }, \n  { \n    name: 'offer',\n    isHidden: true\n  }, \n  { \n    name: 'rejected',\n    isHidden: false,\n    id: 5\n  },\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }\n]","export const largeTabletViewOne = [\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1 \n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3 \n  }, \n  { \n    name: 'offer',\n    isHidden: true,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true,\n    id: 5\n  } \n]\n\nexport const largeTabletViewTwo = [\n  { \n    name: 'wishlist',\n    isHidden: true,\n    id: 1 \n  }, \n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: true,\n    id: 5\n  } \n]\n\nexport const largeTabletViewThree = [\n  { \n    name: 'wishlist',\n    isHidden: true,\n    id: 1\n  }, \n  { \n    name: 'applied',\n    isHidden: true,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: false,\n    id: 3 \n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: false,\n    id: 5\n  } \n]\n\nexport const largeTabletViewFour = [\n  { \n    name: 'applied',\n    isHidden: true,\n    id: 2\n  }, \n  { \n    name: 'interview',\n    isHidden: true,\n    id: 3\n  }, \n  { \n    name: 'offer',\n    isHidden: false,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: false,\n    id: 5 \n  },\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  }\n]\n\nexport const largeTabletViewFive = [\n  { \n    name: 'interview',\n    isHidden: true,\n    id: 3 \n  }, \n  { \n    name: 'offer',\n    isHidden: true,\n    id: 4\n  }, \n  { \n    name: 'rejected',\n    isHidden: false, \n    id: 5\n  },\n  { \n    name: 'wishlist',\n    isHidden: false,\n    id: 1\n  },\n  { \n    name: 'applied',\n    isHidden: false,\n    id: 2\n  }\n]","\nimport { useState, useEffect } from 'react'\n\n// Usage\n// function App() {\n//   const size = useWindowSize()\n\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   )\n// }\n\n// Hook\nfunction useWindowSize() {\n  const isClient = typeof window === 'object'\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    }\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize)\n\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize\n}\n\nexport default useWindowSize","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\n\nfunction JobIndexCard({ handleDeleteConfirmModal, job_title: jobTitle, company, city, country, id, drag }) {\n\n  return (\n    <Link to={`/jobs/${id}`} >\n      <div className=\"JobIndexCard\" id={id} draggable='true' onDragStart={drag}>\n        <div>\n          <h3><strong>{jobTitle}</strong></h3>\n          <hr/>\n          <h3>{company}</h3>\n          <h3>{city} - {country}</h3>\n        </div>\n        <div>\n          <button value={id} onClick={handleDeleteConfirmModal} className='delete-job-btn'>\n            <Icon size='small' name='trash' />\n          </button>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default JobIndexCard","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nimport JobIndexCard from './JobIndexCard'\n\nfunction JobIndexBoard({ jobData, status, handleDeleteConfirmModal, handleBoardChangeMobile, handleNewJobModal, drop }) {\n\n  const allowDrop = e => {\n    e.preventDefault()\n  }\n\n  const drag = dragEvent => {\n    dragEvent.dataTransfer.setData('jobId', dragEvent.target.id)\n  }\n\n\n  return (\n\n    <section className={status.isHidden ? 'job-board is-hidden' : `job-board ${status.name}`}>\n\n      <div className=\"job-board-header\">\n        <button\n          onClick={handleBoardChangeMobile}\n          value='left'\n          name={status.name}\n          className=\"arrow-left\"\n        >&lt;</button>\n        <h1>{status.name}</h1>\n        <button\n          onClick={handleBoardChangeMobile}\n          value='right'\n          name={status.name}\n          className=\"arrow-right\"\n        >&gt;</button>\n      </div>\n      <div className='job-board-btn'>\n        <Button\n          animated='fade'\n          className='fluid job-index-add-btn'\n          onClick={handleNewJobModal}\n          value={status.id}\n        >\n          <Button.Content visible>+</Button.Content>\n          <Button.Content hidden>Add a new Job</Button.Content>\n        </Button>\n      </div>\n\n      <div className=\"job-board-content\" onDrop={drop} onDragOver={allowDrop} id={status.id}>\n        {jobData.map(job => {\n          if (job.status.name.toUpperCase() === status.name.toUpperCase()) {\n            return (\n              <JobIndexCard\n                key={`jobindex${job.id}`}\n                handleDeleteConfirmModal={handleDeleteConfirmModal}\n                {...job}\n                drag={drag}\n              />\n            )\n          } else {\n            return null\n          }\n        })}\n      </div>\n\n    </section>\n  )\n}\n\n\n\nexport default JobIndexBoard","import React from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n\nfunction DeleteConfirmModal({ deleteModalOpen, nameOfThingToDelete, handleCloseDeleteConfirm, handleDelete }) {\n\n  return (\n    <Modal size='mini' open={deleteModalOpen} basic>\n      <Header icon='archive' content='Delete?' />\n      <Modal.Content>\n        <p>\n          Please confirm if you would like to delete this {nameOfThingToDelete}. This action cannot be undone...\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='blue' inverted onClick={handleCloseDeleteConfirm}>\n          <Icon name='ban' /> cancel\n        </Button>\n        <Button color='red' inverted onClick={handleDelete}>\n          <Icon name='remove' /> Delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default DeleteConfirmModal","export const statusOptions = [\n  {\n    key: 'Wishlist',\n    text: 'Wishlist',\n    value: 1\n  },\n  {\n    key: 'Applied',\n    text: 'Applied',\n    value: 2\n  },\n  {\n    key: 'Interview',\n    text: 'Interview',\n    value: 3\n  },\n  {\n    key: 'Offer',\n    text: 'Offer',\n    value: 4\n  },\n  {\n    key: 'Rejected',\n    text: 'Rejected',\n    value: 5\n  }\n]","import React from 'react'\nimport { Segment, Form, Button, Header, Grid, Dropdown, TextArea } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\n\nimport FormInput from '../common/FormInput'\n\nfunction JobForm({ data, errors, handleChange, handleDateChange, selectDropdown, handleSubmit, formHeaderText, options, buttonText }) {\n\n  // console.log(newJobStatus)\n\n  // const jobStatus = (options, newJobStatus) => {\n  //   options.find(option => {\n  //     console.log(option.value === parseInt(newJobStatus))\n  //     if (option.value === parseInt(newJobStatus)) {\n  //       return option.text\n  //     }\n  //   })\n  // }\n\n  // console.log(jobStatus(options, newJobStatus))\n\n  return (\n    <Segment.Group as='div' className='job-form'>\n      <Segment>\n        <Header as='h1' textAlign='center'> {formHeaderText}</Header>\n        <Form onSubmit={handleSubmit}>\n          <Grid stackable columns={2}>\n            <Grid.Row>\n              <Grid.Column width={11}>\n                <Form.Field>\n                  <Header size='small'>Job title</Header>\n                  <FormInput\n                    error={errors.job_title}\n                    fluidIcon='id badge outline'\n                    iconPosition='left'\n                    type='text'\n                    placeholder='Job title'\n                    name='job_title'\n                    value={data.job_title}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5} only='computer'>\n                <Form.Field>\n                  <Header size='small'>Application deadline</Header>\n                  <SemanticDatepicker\n                    datePickerOnly\n                    clearable\n                    format='DD MMMM YYYY'\n                    name='application_deadline'\n                    value={data.application_deadline ? new Date(data.application_deadline) : null}\n                    onChange={handleDateChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={11}>\n                <Form.Field>\n                  <Header size='small'>Company</Header>\n                  <FormInput\n                    error={errors.company}\n                    fluidIcon='building'\n                    iconPosition='left'\n                    type='text'\n                    placeholder='Company'\n                    name='company'\n                    value={data.company}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5} only='computer'>\n                <Form.Field>\n                  <Header size='small'>Application submitted</Header>\n                  <SemanticDatepicker\n                    datePickerOnly\n                    clearable\n                    format='DD MMMM YYYY'\n                    name='application_submitted'\n                    value={data.application_submitted !== null ? new Date(data.application_submitted) : null}\n                    onChange={handleDateChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column width={4}>\n                <Form.Field>\n                  <Header size='small'>City</Header>\n                  <FormInput\n                    error={errors.city}\n                    type='text'\n                    placeholder='City'\n                    name='city'\n                    value={data.city}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Form.Field>\n                  <Header size='small'>Country</Header>\n                  <FormInput\n                    error={errors.country}\n                    type='text'\n                    placeholder='Country'\n                    name='country'\n                    value={data.country}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5} only='computer'>\n                <Form.Field>\n                  <Header size='small'>Interview date</Header>\n                  <SemanticDatepicker\n                    datePickerOnly\n                    clearable\n                    format='DD MMMM YYYY'\n                    name='interview_date'\n                    value={data.interview_date ? new Date(data.interview_date) : null}\n                    onChange={handleDateChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column width={11}>\n                <Form.Field>\n                  <Header size='small'>URL</Header>\n                  <FormInput\n                    error={errors.job_url}\n                    type='text'\n                    placeholder='Job URL'\n                    name='job_url'\n                    value={data.job_url}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5} only='computer'>\n                <Form.Field>\n                  <Header size='small'>Job offer date</Header>\n                  <SemanticDatepicker\n                    datePickerOnly\n                    clearable\n                    format='DD MMMM YYYY'\n                    name='job_offer_date'\n                    value={data.job_offer_date ? new Date(data.job_offer_date) : null}\n                    onChange={handleDateChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column width={6}>\n                <Form.Field>\n                  <Header size='small'>Salary</Header>\n                  <FormInput\n                    error={errors.salary}\n                    type='text'\n                    placeholder='Salary'\n                    name='salary'\n                    value={data.salary}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5}>\n                <Form.Field>\n                  <Header size='small'>Status</Header>\n                  <Dropdown\n                    fluid\n                    selection\n                    // error={errors.status}\n                    name='status'\n                    value={data.status}\n                    // placeholder={newJobStatus}\n                    options={options}\n                    onChange={selectDropdown}\n                  />\n                </Form.Field>\n              </Grid.Column>\n              <Grid.Column width={5} only='computer'>\n                <Form.Field>\n                  <Header size='small'>Offer accepted</Header>\n                  <SemanticDatepicker\n                    datePickerOnly\n                    clearable\n                    format='DD MMMM YYYY'\n                    name='offer_acceptance_date'\n                    value={data.offer_acceptance_date ? new Date(data.offer_acceptance_date) : null}\n                    onChange={handleDateChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <Grid.Column width={16}>\n                <Form.Field>\n                  <Header size='small'>Description/notes</Header>\n                  <TextArea\n                    error={errors.salary}\n                    type='text'\n                    placeholder='No description'\n                    name='description'\n                    value={data.description}\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Column width={16} only=' tablet mobile'>\n              <Form.Field>\n                <Header size='small'>Application deadline</Header>\n                <SemanticDatepicker\n                  datePickerOnly\n                  clearable\n                  format='DD MMMM YYYY'\n                  name='application_deadline'\n                  value={data.application_deadline ? new Date(data.application_deadline) : null}\n                  onChange={handleDateChange}\n                />\n              </Form.Field>\n            </Grid.Column>\n            <Grid.Column only='tablet mobile'>\n              <Form.Field>\n                <Header size='small'>Application submitted</Header>\n                <SemanticDatepicker\n                  fluid\n                  datePickerOnly\n                  clearable\n                  format='DD MMMM YYYY'\n                  name='application_submitted'\n                  value={data.application_submitted !== null ? new Date(data.application_submitted) : null}\n                  onChange={handleDateChange}\n                />\n              </Form.Field>\n            </Grid.Column>\n            <Grid.Column width={16} only='tablet mobile'>\n              <Form.Field>\n                <Header size='small'>Interview date</Header>\n                <SemanticDatepicker\n                  datePickerOnly\n                  clearable\n                  format='DD MMMM YYYY'\n                  name='interview_date'\n                  value={data.interview_date ? new Date(data.interview_date) : null}\n                  onChange={handleDateChange}\n                />\n              </Form.Field>\n            </Grid.Column>\n            <Grid.Column width={16} only='tablet mobile'>\n              <Form.Field>\n                <Header size='small'>Job offer date</Header>\n                <SemanticDatepicker\n                  datePickerOnly\n                  clearable\n                  format='DD MMMM YYYY'\n                  name='job_offer_date'\n                  value={data.job_offer_date ? new Date(data.job_offer_date) : ''}\n                  onChange={handleDateChange}\n                />\n              </Form.Field>\n            </Grid.Column>\n            <Grid.Column width={16} only='tablet mobile'>\n              <Form.Field>\n                <Header size='small'>Offer accepted</Header>\n                <SemanticDatepicker\n                  datePickerOnly\n                  clearable\n                  format='DD MMMM YYYY'\n                  name='offer_accepted'\n                  value={data.offer_accepted ? new Date(data.offer_accepted) : null}\n                  onChange={handleDateChange}\n                />\n              </Form.Field>\n            </Grid.Column>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid>\n          <Button\n            className='teal-button'\n            content={buttonText} \n            fluid />\n        </Form>\n      </Segment>\n    </Segment.Group>\n  )\n\n}\n\nexport default JobForm","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { addNewJob } from '../../lib/api'\nimport { statusOptions } from '../../lib/statusOptions'\nimport useForm from '../../utils/useForm'\n\nimport PageContainer from '../common/PageContainer'\nimport JobForm from './JobForm'\n\nfunction JobNew ({ handleNewJobModalClose, newJobStatus }) {\n\n  const history = useHistory()\n\n  const onSubmitSuccess = () => {\n    handleNewJobModalClose()\n    history.push('/jobs/')\n  }\n\n  const { formData, handleChange, handleDateChange, selectDropdown, formErrors, handleSubmit } = useForm({\n    job_title: '',\n    company: '',\n    application_deadline: null,\n    application_submitted: null,\n    interview_date: null,\n    job_offer_date: null,\n    offer_acceptance_date: null,\n    job_url: '',\n    salary: null,\n    city: '',\n    country: '',\n    status: parseInt(newJobStatus)\n  }, addNewJob, null, onSubmitSuccess)\n\n  console.log(newJobStatus)\n  console.log(formData)\n\n  return (\n    <PageContainer>\n      <JobForm \n        data={formData}\n        errors={formErrors}\n        handleChange={handleChange}\n        handleDateChange={handleDateChange}\n        selectDropdown={selectDropdown}\n        handleSubmit={handleSubmit}\n        formHeaderText='Add new job'\n        options={statusOptions}\n        newJobStatus={newJobStatus}\n        buttonText='Add'\n      />\n    </PageContainer>\n  )\n  \n}\n\nexport default JobNew","import React from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\n\nimport JobNew from './JobNew'\n\nfunction JobNewModal({ addNewModalOpen, handleNewJobModalClose, newJobStatus }) {\n\n  console.log(newJobStatus, typeof(newJobStatus))\n  return (\n    <Modal open={addNewModalOpen}>\n      <Modal.Content>\n        <Button\n          size='large'\n          className='cancel-button'\n          icon='close'\n          onClick={handleNewJobModalClose}\n        />\n        <JobNew\n          handleNewJobModalClose={handleNewJobModalClose}\n          newJobStatus={newJobStatus}\n        />\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default JobNewModal","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { getAllJobs, getSingleJob, editJob, deleteJob } from '../../lib/api'\nimport { mobileView, smallTabletView, largeTabletView, desktopView } from '../../lib/boardViews'\nimport { wishlistView, appliedView, interviewView, offerView, rejectedView } from '../../lib/mobileViews'\nimport { smallTabletViewTwo, smallTabletViewThree, smallTabletViewFour, smallTabletViewFive } from '../../lib/smallTabletViews'\nimport { largeTabletViewTwo, largeTabletViewThree, largeTabletViewFour, largeTabletViewFive } from '../../lib/largeTabletViews'\nimport useWindowSize from '../../utils/useWindowSize'\nimport JobIndexBoard from './JobIndexBoard'\nimport DeleteConfirmModal from '../common/DeleteConfirmModal'\nimport JobNewModal from './JobNewModal'\n\n\n\nfunction JobIndex() {\n  const [jobs, setJobs] = useState(null)\n  const { width } = useWindowSize()\n  const [statuses, setStatuses] = useState(desktopView)\n  const [currentSmallTabletView, setCurrentSmallTabletView] = useState(smallTabletView)\n  const [currentLargeTabletView, setCurrentLargeTabletView] = useState(largeTabletView)\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\n  const [jobToDelete, setJobToDelete] = useState(null)\n  const [addNewModalOpen, setAddNewModalOpen] = useState(false)\n  const [newJobStatus, setNewJobStatus] = useState(null)\n  const history = useHistory()\n\n\n  const getData = async () => {\n    try {\n      const res = await getAllJobs()\n      setJobs(res.data)\n    } catch (err) {\n      history.push('/notfound')\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  useEffect(() => {\n    if (width <= 480) {\n      setStatuses(mobileView)\n    } else if (width <= 768) {\n      setStatuses(smallTabletView)\n    } else if (width <= 1120) {\n      setStatuses(largeTabletView)\n    } else {\n      setStatuses(desktopView)\n    }\n  }, [width])\n\n  const handleNewJobModal = e => {\n    e.preventDefault()\n    setAddNewModalOpen(true)\n    setNewJobStatus(e.currentTarget.value)\n  }\n\n  const handleNewJobModalClose = () => {\n    setAddNewModalOpen(false)\n    getData()\n  }\n\n\n  const handleDeleteJob = async () => {\n    try {\n      await deleteJob(jobToDelete)\n      setDeleteModalOpen(false)\n    } catch (err) {\n      console.log(err)\n    }\n    getData()\n  }\n\n  const handleDeleteConfirmModal = e => {\n    e.preventDefault()\n    setJobToDelete(e.currentTarget.value)\n    setDeleteModalOpen(true)\n  }\n\n  const handleCloseDeleteConfirm = () => {\n    setDeleteModalOpen(false)\n  }\n\n  const handleBoardChangeMobile = e => {\n    e.preventDefault()\n    if (e.target.value === 'left' && e.target.name === 'wishlist') {\n      setStatuses(rejectedView)\n    } else if (e.target.value === 'right' && e.target.name === 'wishlist') {\n      setStatuses(appliedView)\n    } else if (e.target.value === 'left' && e.target.name === 'applied') {\n      setStatuses(wishlistView)\n    } else if (e.target.value === 'right' && e.target.name === 'applied') {\n      setStatuses(interviewView)\n    } else if (e.target.value === 'left' && e.target.name === 'interview') {\n      setStatuses(appliedView)\n    } else if (e.target.value === 'right' && e.target.name === 'interview') {\n      setStatuses(offerView)\n    } else if (e.target.value === 'left' && e.target.name === 'offer') {\n      setStatuses(interviewView)\n    } else if (e.target.value === 'right' && e.target.name === 'offer') {\n      setStatuses(rejectedView)\n    } else if (e.target.value === 'left' && e.target.name === 'rejected') {\n      setStatuses(offerView)\n    } else {\n      setStatuses(wishlistView)\n    }\n  }\n\n  const handleBoardChangeSmallTablet = e => {\n    e.preventDefault()\n    if (currentSmallTabletView === smallTabletView && e.target.value === 'right') {\n      setCurrentSmallTabletView(smallTabletViewTwo)\n      setStatuses(smallTabletViewTwo)\n    }\n    if (currentSmallTabletView === smallTabletViewTwo && e.target.value === 'right') {\n      setCurrentSmallTabletView(smallTabletViewThree)\n      setStatuses(smallTabletViewThree)\n    }\n    if (currentSmallTabletView === smallTabletViewThree && e.target.value === 'right') {\n      setCurrentSmallTabletView(smallTabletViewFour)\n      setStatuses(smallTabletViewFour)\n    }\n    if (currentSmallTabletView === smallTabletViewFour && e.target.value === 'right') {\n      setCurrentSmallTabletView(smallTabletViewFive)\n      setStatuses(smallTabletViewFive)\n    }\n    if (currentSmallTabletView === smallTabletViewFive && e.target.value === 'right') {\n      setCurrentSmallTabletView(smallTabletView)\n      setStatuses(smallTabletView)\n    }\n    if (currentSmallTabletView === smallTabletView && e.target.value === 'left') {\n      setCurrentSmallTabletView(smallTabletViewFive)\n      setStatuses(smallTabletViewFive)\n    }\n    if (currentSmallTabletView === smallTabletViewTwo && e.target.value === 'left') {\n      setCurrentSmallTabletView(smallTabletView)\n      setStatuses(smallTabletView)\n    }\n    if (currentSmallTabletView === smallTabletViewThree && e.target.value === 'left') {\n      setCurrentSmallTabletView(smallTabletViewTwo)\n      setStatuses(smallTabletViewTwo)\n    }\n    if (currentSmallTabletView === smallTabletViewFour && e.target.value === 'left') {\n      setCurrentSmallTabletView(smallTabletViewThree)\n      setStatuses(smallTabletViewThree)\n    }\n    if (currentSmallTabletView === smallTabletViewFive && e.target.value === 'left') {\n      setCurrentSmallTabletView(smallTabletViewFour)\n      setStatuses(smallTabletViewFour)\n    }\n  }\n\n  const handleBoardChangeLargeTablet = e => {\n    if (currentLargeTabletView === largeTabletView && e.target.value === 'right') {\n      setCurrentLargeTabletView(largeTabletViewTwo)\n      setStatuses(largeTabletViewTwo)\n    }\n    if (currentLargeTabletView === largeTabletViewTwo && e.target.value === 'right') {\n      setCurrentLargeTabletView(largeTabletViewThree)\n      setStatuses(largeTabletViewThree)\n    }\n    if (currentLargeTabletView === largeTabletViewThree && e.target.value === 'right') {\n      setCurrentLargeTabletView(largeTabletViewFour)\n      setStatuses(largeTabletViewFour)\n    }\n    if (currentLargeTabletView === largeTabletViewFour && e.target.value === 'right') {\n      setCurrentLargeTabletView(largeTabletViewFive)\n      setStatuses(largeTabletViewFive)\n    }\n    if (currentLargeTabletView === largeTabletViewFive && e.target.value === 'right') {\n      setCurrentLargeTabletView(largeTabletView)\n      setStatuses(largeTabletView)\n    }\n    if (currentLargeTabletView === largeTabletView && e.target.value === 'left') {\n      setCurrentLargeTabletView(largeTabletViewFive)\n      setStatuses(largeTabletViewFive)\n    }\n    if (currentLargeTabletView === largeTabletViewTwo && e.target.value === 'left') {\n      setCurrentLargeTabletView(largeTabletView)\n      setStatuses(largeTabletView)\n    }\n    if (currentLargeTabletView === largeTabletViewThree && e.target.value === 'left') {\n      setCurrentLargeTabletView(largeTabletViewTwo)\n      setStatuses(largeTabletViewTwo)\n    }\n    if (currentLargeTabletView === largeTabletViewFour && e.target.value === 'left') {\n      setCurrentLargeTabletView(largeTabletViewThree)\n      setStatuses(largeTabletViewThree)\n    }\n    if (currentLargeTabletView === largeTabletViewFive && e.target.value === 'left') {\n      setCurrentLargeTabletView(largeTabletViewFour)\n      setStatuses(largeTabletViewFour)\n    }\n  }\n\n\n  const drop = async dropEvent => {\n    dropEvent.persist()\n    dropEvent.preventDefault()\n    const jobId = dropEvent.dataTransfer.getData('jobId')\n    const jobToUpdate = await getSingleJob(jobId)\n    const newStatus = dropEvent.target.id\n    if (!newStatus) return\n    await editJob({ ...jobToUpdate.data, status: newStatus }, jobId)\n    getData()\n  }\n\n  if (!jobs) return null\n\n  return (\n\n    <>\n      <DeleteConfirmModal\n        deleteModalOpen={deleteModalOpen}\n        handleCloseDeleteConfirm={handleCloseDeleteConfirm}\n        nameOfThingToDelete='Job'\n        handleDelete={handleDeleteJob}\n      />\n      <JobNewModal\n        addNewModalOpen={addNewModalOpen}\n        handleNewJobModalClose={handleNewJobModalClose}\n        newJobStatus={newJobStatus}\n      />\n      <div className=\"JobIndex\">\n        <div className=\"button-container-small-tablet right\">\n          <button\n            className='tablet-btn left'\n            onClick={handleBoardChangeSmallTablet}\n            value='left'\n          >&lt;</button>\n        </div>\n        <div className=\"button-container-small-tablet right\">\n          <button\n            className='tablet-btn right'\n            onClick={handleBoardChangeSmallTablet}\n            value='right'\n          >&gt;</button>\n        </div>\n        <div className=\"button-container-large-tablet left\">\n          <button\n            className='tablet-btn left'\n            onClick={handleBoardChangeLargeTablet}\n            value='left'\n          >&lt;</button>\n        </div>\n        <div className=\"button-container-large-tablet right\">\n          <button\n            className='tablet-btn right'\n            onClick={handleBoardChangeLargeTablet}\n            value='right'\n          >&gt;</button>\n        </div>\n        <div className=\"job-boards\">\n          {statuses.map((status => {\n            return (\n              <JobIndexBoard\n                key={status.name}\n                jobData={jobs}\n                status={status}\n                handleDeleteConfirmModal={handleDeleteConfirmModal}\n                handleBoardChangeMobile={handleBoardChangeMobile}\n                handleNewJobModal={handleNewJobModal}\n                drop={drop}\n              />\n            )\n          }))}\n        </div>\n      </div>\n\n    </>\n  )\n\n}\n\nexport default JobIndex","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Header, Grid, Segment, Button } from 'semantic-ui-react'\n\nfunction JobDetails ({ job }) {\n  return (\n    <Grid stackable columns={2}>\n      <Grid.Row stretched>\n        <Grid.Column width={11}>\n          <Header size='small'>Job title</Header>\n          <Segment>\n            <p>{job.job_title}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={5} only='computer tablet'>\n          <Header size='small'>Application deadline</Header>\n          <Segment>\n            <p>{job.application_deadline ? job.application_deadline : 'No date'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={11}>\n          <Header size='small'>Company</Header>\n          <Segment>\n            <p>{job.company}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={5} only='computer tablet'>\n          <Header size='small'>Application submitted</Header>\n          <Segment>\n            <p>{job.application_submitted ? job.application_submitted : 'No date'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row stretched>\n        <Grid.Column width={4}>\n          <Header size='small'>City</Header>\n          <Segment>\n            <p>{job.city}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={7}>\n          <Header size='small'>Country</Header>\n          <Segment>\n            <p>{job.country}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={5} only='computer tablet'>\n          <Header size='small'>Interview date</Header>\n          <Segment>\n            <p>{job.interview_date ? job.interview_date : 'No date'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row stretched>\n        <Grid.Column width={11}>\n          <Header size='small'>URL</Header>\n          <Segment>\n            <a href={job.job_url} target='_blank' rel='noopener noreferrer'><p>{job.job_url}</p></a>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={5} only='computer tablet'>\n          <Header size='small'>Job offer date</Header>\n          <Segment>\n            <p>{job.job_offer_date ? job.job_offer_date : 'No date'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row stretched>\n        <Grid.Column width={5}>\n          <Header size='small'>Salary</Header>\n          <Segment>\n            <p>{job.salary ? job.salary : 'No salary'}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Header size='small'>Status</Header>\n          <Segment>\n            <p>{job.status.name}</p>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={5} only='computer tablet'>\n          <Header size='small'>Offer accepted</Header>\n          <Segment>\n            <p>{job.offer_acceptance_date ? job.offer_acceptance_date : 'No date'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row stretched>\n        <Grid.Column width={16}>\n          <Header size='small'>Description/notes</Header>\n          <Segment>\n            <p>{job.description ? job.description : 'No description'}</p>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Column width={4} only='mobile'>\n        <Header size='small'>Application deadline</Header>\n        <Segment>\n          <p>{job.application_deadline ? job.application_deadline : 'No date'}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={4} only='mobile'>\n        <Header size='small'>Application submitted</Header>\n        <Segment>\n          <p>{job.application_submitted ? job.application_submitted : 'No date'}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={4} only='mobile'>\n        <Header size='small'>Interview date</Header>\n        <Segment>\n          <p>{job.interview_date ? job.interview_date : 'No date'}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={4} only='mobile'>\n        <Header size='small'>Job offer date</Header>\n        <Segment>\n          <p>{job.job_offer_date ? job.job_offer_date : 'No date'}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={4} only='mobile'>\n        <Header size='small'>Offer accepted</Header>\n        <Segment>\n          <p>{job.offer_accepted ? job.offer_accepted : 'No date'}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={16}>\n        <Link to={`/jobs/${job.id}/edit`}>\n          <Button \n            content='Update this job' className='teal-button' \n            fluid />\n        </Link>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default JobDetails","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Item, Button } from 'semantic-ui-react'\n\n\nfunction JobRelatedTasks({ job }) {\n\n  return (\n    <Item.Group divided>\n      {job.related_tasks.map(task => (\n        <Item key={task.id}>\n          <Item.Content>\n            <Item.Header as='h2'>{task.title ? task.title : 'No title'}</Item.Header>\n            <Item.Meta>{task.task_category.name}</Item.Meta>\n            <Item.Description>\n              <p>{task.notes ? task.notes : 'No notes'}</p>\n            </Item.Description>\n          </Item.Content>\n        </Item>\n      ))}\n      <Link to={'/tasks/'}>\n        <Button content='Go to tasks page' className='teal-button' fluid />\n      </Link>\n    </Item.Group>\n  )\n}\n\nexport default JobRelatedTasks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Item, Button } from 'semantic-ui-react'\n\nfunction JobRelatedContacts ({ job }) {\n\n  return (\n    <Item.Group divided>\n      {job.related_contacts.map(contact => (\n        <Item key={contact.id}>\n          <Item.Content>\n            <Item.Header as='h2'>{contact.name}</Item.Header>\n            <Item.Meta>{contact.job_title ? contact.job_title : '-'} at {contact.company ? contact.company : '-'}</Item.Meta>\n            <Item.Description>\n              <p>Email: {contact.email ? contact.email : ''}</p>\n              <p>Phone: {contact.phone ? contact.phone : ''}</p>\n            </Item.Description>\n          </Item.Content>\n        </Item>\n      ))}\n      <Link to={'/contacts/'}>\n        <Button content='Go to contacts page' className='teal-button' fluid />\n      </Link>\n    </Item.Group>\n  )\n}\n\nexport default JobRelatedContacts","import React from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { getSingleJob } from '../../lib/api'\nimport { Header, Segment, Tab, Icon } from 'semantic-ui-react'\n\nimport PageContainer from '../common/PageContainer'\nimport JobDetails from './JobDetails'\nimport JobRelatedTasks from './JobRelatedTasks'\nimport JobRelatedContacts from './JobRelatedContacts'\n\nfunction JobShow() {\n  const [job, setJob] = React.useState(null)\n  const { id } = useParams()\n  const history = useHistory()\n\n  const panes = [\n    {\n      menuItem: 'Job details',\n      displayName: 'JobDetails',\n      render: function () {\n        return <Tab.Pane attached={false}><JobDetails job={job} /></Tab.Pane>\n      }\n    },\n    {\n      menuItem: 'Tasks',\n      displayName: 'JobRelatedTasks',\n      render: function () {\n        return <Tab.Pane attached={false}><JobRelatedTasks job={job} /></Tab.Pane>\n      }\n    },\n    {\n      menuItem: 'Contacts',\n      displayName: 'JobRelatedContacts',\n      render: function () {\n        return <Tab.Pane attached={false}><JobRelatedContacts job={job} /></Tab.Pane>\n      }\n    }\n  ]\n\n  React.useEffect(() => {\n    const getJobData = async () => {\n      try {\n        const { data } = await getSingleJob(id)\n        setJob(data)\n      } catch (err) {\n        history.push('/notfound')\n      }\n    }\n    getJobData()\n  }, [id, history])\n\n  if (!job) return null\n\n  return (\n    <PageContainer>\n      <Segment.Group as='div' className='job-show'>\n        <Segment>\n          <Link to='/jobs/'>\n            <p> &lt; Back to job board</p>\n          </Link>\n          <Header as='h1' textAlign='center'>{job.job_title}</Header>\n          <Tab\n            menu={{ secondary: true, pointing: true }}\n            panes={panes}\n          />\n        </Segment>\n      </Segment.Group>\n    </PageContainer>\n  )\n}\n\nexport default JobShow","import React from 'react'\n\nconst initialState = {\n  data: null,\n  error: null,\n  loading: true\n}\n\nfunction useFetch(request, params = null) {\n  const [state, setState] = React.useState(initialState)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await request(params)\n        setState({ data, loading: false, error: null })\n      } catch (err) {\n        setState({ error: true, loading: false, data: null })\n      }\n    }\n    getData()\n  }, [request, params])\n\n  return state\n}\n\nexport default useFetch","import React from 'react'\nimport { useHistory, useParams, Link } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\n\nimport { getSingleJob, editJob } from '../../lib/api'\nimport { statusOptions } from '../../lib/statusOptions'\nimport useFetch from '../../utils/useFetch'\nimport useForm from '../../utils/useForm'\n\nimport PageContainer from '../common/PageContainer'\nimport JobForm from './JobForm'\n\nfunction JobEdit() {\n  const { id: jobId } = useParams()\n  const history = useHistory()\n\n  const { data: job, loading, error } = useFetch(getSingleJob, jobId)\n\n  const onSubmitSuccess = () => {\n    history.push(`/jobs/${jobId}/`)\n  }\n\n  const { formData, handleChange, handleDateChange, selectDropdown, setFormData, formErrors, handleSubmit } = useForm({\n    job_title: '',\n    company: '',\n    application_deadline: null,\n    application_submitted: null,\n    interview_date: null,\n    job_offer_date: null,\n    offer_acceptance_date: null,\n    job_url: '',\n    salary: null,\n    city: '',\n    country: '',\n    status: ''\n  }, editJob, jobId, onSubmitSuccess)\n\n  React.useEffect(() => {\n    if (job) {\n      setFormData({ ...job, status: job.status.id })\n    }\n  }, [job, setFormData])\n\n  if (error) {\n    console.log(error)\n  }\n\n  return (\n    <PageContainer>\n      {loading ?\n        'LOADING' :\n        <JobForm\n          data={formData}\n          errors={formErrors}\n          handleChange={handleChange}\n          handleDateChange={handleDateChange}\n          selectDropdown={selectDropdown}\n          handleSubmit={handleSubmit}\n          formHeaderText={`Update: ${job.job_title}`}\n          options={statusOptions}\n          buttonText='Update'\n        />\n      }\n    </PageContainer >\n  )\n}\nexport default JobEdit\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nfunction AddButton({ color, buttonText, onClick }) {\n  return (\n    <Button basic color={color} animated='fade' className='fluid' onClick={onClick}>\n      <Button.Content visible>+</Button.Content>\n      <Button.Content hidden>{buttonText}</Button.Content>\n    </Button>\n  )\n}\nexport default AddButton","/* eslint-disable camelcase */\nimport React from 'react'\n\n\nfunction GetDate(date) {\n\n  const today_date = new Date()\n  const formatted_today_date = (new Date(today_date.getTime() - (today_date.getTimezoneOffset() * 60000))).toISOString().split('T')[0]\n\n  const today_date_with_time = new Date().getTime()\n  const formatted_date = (new Date(date).getTime())\n  const microSecondsDiff = Math.abs(formatted_date - today_date_with_time)\n  \n  if (date === formatted_today_date) \n    return <p className='due-today'>0 days</p>\n\n  if (formatted_date > today_date_with_time) \n    return <p className='due'>{Math.floor(microSecondsDiff / (1000 * 60 * 60 * 24))} days</p>\n  \n  if (formatted_date < today_date_with_time) \n    return <p className='overdue'>{Math.floor(microSecondsDiff / (1000 * 60 * 60 * 24))} days</p>\n\n}\n\nexport default GetDate","// import { Label } from 'semantic-ui-react'\n\n\nexport const taskCategories = [\n  {\n    key: 'apply',\n    text: 'Apply',\n    value: 1,\n    label: { color: 'red' }\n  },\n  {\n    key: 'follow_up',\n    text: 'Follow Up',\n    value: 2,\n    label: { color: 'orange' }\n  },\n  {\n    key: 'prep_cover_letter',\n    text: 'Prep Cover Letter',\n    value: 3,\n    label: { color: 'yellow' }\n  },\n  {\n    key: 'prep_cv',\n    text: 'Prep CV',\n    value: 4,\n    label: { color: 'olive' }\n  },\n  {\n    key: 'reach_out',\n    text: 'Reach Out',\n    value: 5,\n    label: { color: 'green' }\n  },\n  {\n    key: 'prep_for_interview',\n    text: 'Prep For Interview',\n    value: 6,\n    label: { color: 'teal' }\n  },\n  {\n    key: 'phone_screen',\n    text: 'Phone Screen',\n    value: 7,\n    label: { color: 'blue' }\n  },\n  {\n    key: 'phone_interview',\n    text: 'Phone Interview',\n    value: 8,\n    label: { color: 'violet' }\n  },\n  {\n    key: 'on_site_interview',\n    text: 'On-site Intervieww',\n    value: 9,\n    label: { color: 'purple' }\n  },\n  {\n    key: 'offer_recieved',\n    text: 'Offer Recieved',\n    value: 10,\n    label: { color: 'pink' }\n  },\n  {\n    key: 'accept_offer',\n    text: 'Accept Offer',\n    value: 11,\n    label: { color: 'brown' }\n  },\n  {\n    key: 'decline_offer',\n    text: 'Decline Offer',\n    value: 12,\n    label: { color: 'grey' }\n  },\n  {\n    key: 'rejected',\n    text: 'Rejected',\n    value: 13,\n    label: { color: 'black' }\n  },\n  {\n    key: 'send_thankyou',\n    text: 'Send Thankyou',\n    value: 14,\n    label: { color: 'red' }\n  },\n  {\n    key: 'email',\n    text: 'Email',\n    value: 15,\n    label: { color: 'orange' }\n  },\n  {\n    key: 'meeting',\n    text: 'Meeting',\n    value: 16,\n    label: { color: 'yellow' }\n  },\n  {\n    key: 'phone_call',\n    text: 'Phone Call',\n    value: 17,\n    label: { color: 'olive' }\n  },\n  {\n    key: 'send_availability',\n    text: 'Send Availability',\n    value: 18,\n    label: { color: 'green' }\n  },\n  {\n    key: 'assignment',\n    text: 'Assignment',\n    value: 19,\n    label: { color: 'teal' }\n  },\n  {\n    key: 'networking_event',\n    text: 'Networking Event',\n    value: 20,\n    label: { color: 'blue' }\n  },\n  {\n    key: 'other',\n    text: 'Other',\n    value: 21,\n    label: { color: 'violet' }\n  }\n]","/* eslint-disable camelcase */\nimport React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport { taskCategories } from '../tasks/TaskCategories'\n\nfunction TaskLabel(category) {\n  const string = category.category\n\n  const filterCategories = (array, string) => {\n    return array.filter(item => {\n      if (item.value === string) {\n        return item\n      }\n    })\n  }\n  const filteredCategory = filterCategories(taskCategories, string)\n  \n  const text = filteredCategory[0].text\n  const color = filteredCategory[0].label.color\n\n  return (\n    <Label color={color}>{text}</Label>\n  )\n}\n\nexport default TaskLabel\n","/* eslint-disable camelcase */\nimport React from 'react'\nimport { Grid, Card, Checkbox, Icon } from 'semantic-ui-react'\n\nimport TaskLabel from '../common/TaskLabel'\n\nfunction TaskShowCard(\n  { id, completed, toggleCheckbox, toggleForm, task_category, job, date, title }) {\n\n\n  return (\n    <Grid textAlign='left' verticalAlign='middle' >\n      <Grid.Row  >\n        <Card fluid>\n          <div className='taskshow-mobile' >\n            <Card.Content>\n              <Card.Header>\n                <div className='task-header'>\n                  <div className='task-checkbox'>\n                    <Checkbox\n                      id={id}\n                      checked={completed}\n                      onChange={toggleCheckbox} />\n                  </div>\n                  <div className='task-title'>\n                    {title ? title : task_category.name}\n                  </div>\n                  <div className='task-category'>\n                    <TaskLabel category={task_category.id} />\n                  </div>\n                </div>\n              </Card.Header>\n            </Card.Content>\n            <Card.Content>\n              <div className='task-content'>\n                <button className='btn-not-displayed' type='button' onClick={toggleForm} value={id}> <Icon name='edit outline' />\n                </button>\n                <div className='task-job'>\n                  {job ? `${job.company}: ${job.job_title}` : ''}\n                </div>\n                <div className='task-date'>\n                  {date}\n                </div>\n              </div>\n            </Card.Content>\n          </div>\n        </Card>\n      </Grid.Row>\n    </Grid>\n  )\n}\nexport default TaskShowCard","/* eslint-disable camelcase */\nimport React from 'react'\n\nimport GetDate from '../common/GetDate'\nimport TaskShowCard from '../tasks/TaskShowCard'\n\nfunction TaskShow({ task, toggleCheckbox, toggleForm }) {\n\n  const { added_date, reminder_date, task_category, title, job, completed, id } = task\n  const date = GetDate(reminder_date ? reminder_date : added_date)\n\n  return (\n    <div className=\"TaskShow section task-show-mobile\">\n      <TaskShowCard\n        id={id}\n        completed={completed}\n        toggleCheckbox={toggleCheckbox}\n        task_category={task_category}\n        toggleForm={toggleForm}\n        title={title}\n        job={job}\n        date={date}\n      />\n    </div>\n  )\n}\n\n\nexport default TaskShow","/* eslint-disable camelcase */\nimport React from 'react'\nimport { Form, Grid, Icon, Header, Dropdown, Button, Segment } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\n\nimport PageContainer from '../common/PageContainer'\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport TaskLabel from '../common/TaskLabel'\nimport { taskCategories } from './TaskCategories'\n\n\n\nfunction TaskFormComputer({ date, jobOptions, formData, task, selectDropdown, handleChange, handleDateChange, deleteItem, handleSubmit, closeForm }) {\n\n  if (!formData) return null\n  const { notes, reminder_date, title } = formData\n  const taskPlaceholder = (<span><TaskLabel category={task.task_category.id} /></span>)\n\n  return (\n\n    <PageContainer>\n      <Segment.Group>\n        <Segment className='taskedit-computer'>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Grid >\n              <Grid.Row only='tablet computer'>\n                <Grid.Column width={1}>\n                  <button className='btn-not-displayed'\n                    type ='button' onClick={closeForm} >\n                    <Icon name='close'  />\n                  </button>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                  <Header as='h1' textAlign='center'>Update Task</Header>\n                </Grid.Column>\n                <Grid.Column width={3} textAlign='right'>\n                  <Form.Field>\n                    {date}\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row only='tablet computer' className='row1'>\n                <Grid.Column width={5}>\n                  <Form.Field>\n                    <Header size='small'>Task Category</Header>\n                    <Dropdown\n                      search\n                      clearable\n                      selection\n                      placeholder={taskPlaceholder}\n                      name='task_category'\n                      options={taskCategories}\n                      onChange={selectDropdown}\n                    />\n\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={11}>\n                  <Form.Field>\n                    <Header size='small'>Task Title</Header>\n                    <FormInput\n                      fluidIcon='pencil alternate'\n                      iconPosition='left'\n                      placeholder={title ? title : 'Add Task Title'}\n                      value={title || ''}\n                      type='text'\n                      name='title'\n                      onChange={handleChange}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n\n              </Grid.Row>\n\n              <Grid.Row only='tablet computer' className='row2'>\n                <Grid.Column width={16}>\n                  <Form.Field>\n                    <Header size='small'>Notes</Header>\n                    <FormInput\n                      fluidIcon='sticky note'\n                      iconPosition='left'\n                      placeholder='Notes'\n                      value={notes || ''}\n                      type='text'\n                      name='notes'\n                      onChange={handleChange}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n\n              </Grid.Row>\n              <Grid.Row only='tablet computer' className='row3'>\n                <Grid.Column width={6}>\n                  <Form.Field>\n                    <Header size='small'>Reminder Date</Header>\n                    <SemanticDatepicker \n                      size='large'\n                      onChange={handleDateChange}\n                      iconPosition='left'\n                      datePickerOnly\n                      clearable\n                      pointing='left'\n                      name='reminder_date'\n                      format='DD-MM-YYYY'\n                      value={reminder_date ? new Date(reminder_date) : null}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={10} >\n                  <Form.Field>\n                    <Header size='small'>Related Job</Header>\n                    <Dropdown\n                      search\n                      placeholder='Add related job'\n                      value={formData.job }\n                      name='job'\n                      className='fluid'\n                      selection\n                      options={jobOptions}\n                      onChange={selectDropdown}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row only='tablet computer' reverse className='row4'>\n                <Grid.Column textAlign='right' width={14} className='edit-btn'>\n                  <FormButton\n                    color='red'\n                    buttonText='Update'\n                    type='submit'\n                  ></FormButton>\n                </Grid.Column>\n                <Grid.Column width={2}>\n                  <Button type='button' icon inverted color='red' size='small' value={task.id}\n                    onClick={deleteItem}>\n                    <Icon name='trash alternate' size='large' />\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Segment>\n      </Segment.Group>\n    </PageContainer>\n\n  )\n}\nexport default TaskFormComputer","/* eslint-disable camelcase */\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { editTask, getAllJobs } from '../../lib/api'\n\nimport GetDate from '../common/GetDate'\nimport TaskFormComputer from './TaskFormComputer'\n\nfunction TaskEditComputer({ closeForm, data, getData, handleDeleteConfirmModal }) {\n  const history = useHistory()\n  const [task, setTask] = React.useState(null)\n  const [jobs, setJobs] = React.useState(null)\n  const [formData, setFormData] = React.useState(null)\n  \n\n  const getJobsData = async () => {\n    try {\n      const res = await getAllJobs()\n      setJobs(res.data)\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  React.useEffect(() => {\n    if (!data) return \n    setTask(data)\n    getJobsData()\n    if (!data.job) {\n      setFormData({\n        ...data,\n        task_category: data.task_category.id,\n        completed: !data.completed\n      })\n    } else {\n      setFormData({\n        ...data,\n        job: data.job.id,\n        task_category: data.task_category.id,\n        completed: !data.completed\n      })\n    }\n  }, [data])\n\n  //* useForm not used at taskId not set from params\n  const handleChange = ({ target: { name, value, type, completed } }) => {\n    const newValue = (type === 'checkbox' ? completed : value) \n    const updatedFormData = { ...formData, [name]: newValue }\n    setFormData(updatedFormData)\n  }\n\n  const selectDropdown = (event, result ) => {\n    const { name, value } = result   \n    setFormData({ ...formData, [name]: value })\n  }\n\n  const handleDateChange = (event, data) => {\n    const { name, value } = data \n    const formattedDate = (value) => {\n      if (!value) {\n        return null\n      } else {\n        return (new Date(value.getTime() - (value.getTimezoneOffset() * 60000))).toISOString().split('T')[0]\n      }\n    }\n    const date = formattedDate(value)\n    setFormData({ ...formData, [name]: date })\n  }\n\n  const toggleCheckbox = async () => {\n    setFormData({ ...formData, completed: !formData.completed })\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()  \n    try {\n      await editTask(formData, task.id)\n      closeForm()\n      getData()\n      console.log('updated') \n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  if (!formData) return null\n  const { added_date, reminder_date } = formData\n  if (!task) return null\n  \n  const dateProvided = () => {\n    if (reminder_date) {\n      return GetDate(reminder_date)\n    } else {\n      return GetDate(added_date)\n    }\n  }\n  const date = dateProvided(reminder_date, added_date)\n\n  if (!jobs) return null\n  const jobOptions = jobs.map((job => {\n    return (\n      {\n        key: `${job.job_title} - ${job.company}`,\n        text: `${job.job_title} - ${job.company}`,\n        value: job.id\n      }\n    )\n  }))\n\n\n  return (\n    <TaskFormComputer\n      task={task}\n      jobOptions={jobOptions}\n      date={date}\n      closeForm={closeForm}\n      formData={formData}\n      toggleCheckbox={toggleCheckbox}\n      selectDropdown={selectDropdown}\n      handleChange={handleChange}\n      handleDateChange={handleDateChange}\n      deleteItem={handleDeleteConfirmModal}\n      handleSubmit={handleSubmit}\n    />\n  )\n}\nexport default TaskEditComputer","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Grid,  Header, Dropdown, Segment, Icon } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\n\n\nimport useForm from '../../utils/useForm'\nimport { getAllJobs, addNewTask } from '../../lib/api'\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport { taskCategories } from './TaskCategories'\n\n\nfunction TaskAddComputer({ closeForm, getData }) {\n  \n  const history = useHistory()\n  const [jobs, setJobs] = React.useState(null)\n\n  const onSubmitSuccess = () => {\n    console.log('added')\n    closeForm()\n    getData()\n  }\n\n  const { formData, handleChange, formErrors, selectDropdown, handleDateChange, handleSubmit } = useForm({\n    title: '',\n    completed: false,\n    notes: '',\n    task_category: '',\n    job: ''\n  }, addNewTask, null, onSubmitSuccess)\n\n  const getJobsData = async () => {\n    try {\n      const res = await getAllJobs()\n      setJobs(res.data)\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  React.useEffect(() => {\n    getJobsData()\n  }, [])\n\n  if (!jobs) return null\n  const jobOptions = jobs.map((job => {\n    return (\n      {\n        key: `${job.job_title} - ${job.company}`,\n        text: `${job.job_title} - ${job.company}`,\n        value: job.id\n      }\n    )\n  }))\n\n  \n  return (\n    <div className='TaskAddComputer'>\n      <Segment.Group>\n        <Segment>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Grid className='edit-task-computer-tablet'>\n              <Grid.Row only='tablet computer'>\n                <Grid.Column width={1}>\n                  <button className='btn-not-displayed'\n                    type ='button' onClick={closeForm} >\n                    <Icon name='close'  />\n                  </button>\n                </Grid.Column>\n                <Grid.Column width={15}>\n                  <Header as='h1' id='header-font-tasks'textAlign='center'>Add Task</Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row only='tablet computer' className='row1'>\n                <Grid.Column width={5}>\n                  <Form.Field>\n                    <Header size='small'>Task Title</Header>\n                    <FormInput\n                      size='small'\n                      fluidIcon='pencil alternate'\n                      iconPosition='left'\n                      placeholder='Add a task title'\n                      value={formData.title}\n                      type='text'\n                      name='title'\n                      onChange={handleChange}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={6} >\n                  <Form.Field>\n                    <Header size='small'>Related Job</Header>\n                    <Dropdown\n                      search\n                      placeholder='Select your job...'\n                      value={formData.job || ''}\n                      name='job'\n                      className='fluid'\n                      selection\n                      options={jobOptions}\n                      onChange={selectDropdown}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={5} >\n                  <Form.Field>\n                    <Header size='small'>Task Category</Header>\n                    <Dropdown\n                      error={formErrors.task_category}\n                      clearable\n                      search\n                      selection\n                      placeholder='Category'\n                      name='task_category'\n                      options={taskCategories}\n                      onChange={selectDropdown}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row only='tablet computer' className='row2'>\n                <Grid.Column width={7}>\n                  <Form.Field>\n                    <Header size='small'>Notes</Header>\n                    <FormInput\n                      fluidIcon='sticky note'\n                      iconPosition='left'\n                      placeholder='Notes'\n                      value={formData.notes}\n                      type='text'\n                      name='notes'\n                      onChange={handleChange}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={5}>\n                  <Form.Field>\n                    <Header size='small'>Set Due Date</Header>\n                    <SemanticDatepicker \n                      onChange={handleDateChange}\n                      datePickerOnly\n                      clearable\n                      iconPosition='left'\n                      pointing='left'\n                      name='reminder_date'\n                      format='DD-MM-YYYY'\n                      value={formData.reminder_date ? new Date(formData.reminder_date) : null}\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column width={1}></Grid.Column>\n                <Grid.Column width={3} className='edit-btn'>\n                  <Form.Field>\n                    <FormButton\n                      fluidSize='large'\n                      color='red'\n                      buttonText='Add'\n                      type='submit'\n                    ></FormButton>\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form> \n        </Segment>\n      </Segment.Group>\n    </div>\n  )\n}\nexport default TaskAddComputer","import React, { useState } from 'react'\nimport { Grid, Header, Segment } from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom'\n\nimport useWindowSize from '../../utils/useWindowSize'\nimport { getAllTasks, editTask, deleteTask } from '../../lib/api'\nimport AddButton from '../common/AddButton'\nimport PageContainer from '../common/PageContainer'\nimport DeleteConfirmModal from '../common/DeleteConfirmModal'\nimport TaskShow from '../tasks/TaskShow'\nimport TaskEditComputer from './TaskEditComputer'\nimport TaskAddComputer from '../tasks/TaskAddComputer'\n\n\n\nfunction TaskIndex() {\n  const history = useHistory()\n  const { width } = useWindowSize()\n  const [tasks, setTasks] = React.useState(null)\n  const [task, setTask] = React.useState(null)\n  const [formVisible, showForm] = React.useState(false)\n  const [addFormVisible, showAddForm] = React.useState(false)\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\n  const [taskToDelete, setTaskToDelete] = useState(null)\n  const [search, setSearch] = useState('')\n  const [, setFormData] = useState('')\n\n\n\n  const getData = async () => {\n    try {\n      const res = await getAllTasks()\n      setTasks(res.data)\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n  React.useEffect(() => {\n    getData()\n  }, [])\n\n  const filterTasks = (tasks, taskId) => {\n    return tasks.filter(item => {\n      if (item.id === parseInt(taskId)) {\n        return item\n      }\n    })\n  }\n\n  //* Functions to allow the user to tick the task off as completed \n  const toggleCheckbox = async ({ target: { id } }) => {\n    const filteredTasks = filterTasks(tasks, id)\n    const task = filteredTasks[0]\n    if (!task.job) {\n      const formData = {\n        ...task,\n        task_category: task.task_category.id,\n        completed: !task.completed\n      }\n      setFormData(formData)\n      handleSubmit(formData, id)\n    } else {\n      const formData = {\n        ...task,\n        job: task.job.id,\n        task_category: task.task_category.id,\n        completed: !task.completed\n      }\n      setFormData(formData)\n      handleSubmit(formData, id)\n    }\n  }\n\n  const handleSubmit = async (formData, id) => {\n    try {\n      await editTask(formData, id)\n      getData()\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  //* Function to toggle the edit form & set the task to state\n  const toggleForm = (event) => {\n    event.preventDefault()\n    const id = event.currentTarget.value \n    if (width < 768){\n      history.push(`/tasks/${id}`)\n    } else {\n      window.scrollTo(0, 0)\n      showForm(!formVisible)\n      showAddForm(false)\n      const task = filterTasks(tasks, id)\n      setTask(task[0])\n    }\n  }\n\n  const closeForm = () => {\n    setFormData(null)\n    showForm(false)\n  }\n\n  //* Function to toggle the add form\n  const onClickAdd = () => {\n    if (width < 768) {\n      history.push('/tasks/new')\n    } else {\n      showForm(false)\n      showAddForm(!addFormVisible)\n    }\n  }\n  const closeAddForm = () => {\n    showAddForm(false)\n  }\n\n  // * Function for delete modal\n  const handleDeleteConfirmModal = e => {\n    e.preventDefault()\n    setTaskToDelete(e.currentTarget.value)\n    setDeleteModalOpen(true)\n  }\n  const handleCloseDeleteConfirm = () => {\n    setDeleteModalOpen(false)\n  }\n  \n  const deleteItem = async () => {\n    try {\n      await deleteTask(taskToDelete)\n      console.log('deleted')\n      closeForm()\n      getData()\n      setDeleteModalOpen(false)\n    } catch (err) {\n      history.push('/notfound')\n    }\n  }\n\n  \n  const handleSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const searchTasks = () => {\n    const regexp = new RegExp(search, 'i')\n    return tasks.filter(task => {\n      if (!task.job) {\n        return regexp.test(task.title) || regexp.test(task.task_category.name)\n      } else {\n        return regexp.test(task.title) || regexp.test(task.task_category.name) || regexp.test(task.job.job_title) || regexp.test(task.job.company)\n      }\n    }\n    )\n  }\n\n  //* Separate the tasks between completed & not completed & by most recent first\n\n  if (!tasks) return null\n  const sortedTasks = searchTasks().sort((a, b) => new Date(b.added_date) - new Date(a.added_date))\n  const filteredTasks = (array, string) => {\n    return array.filter(item => {\n      return item.completed === string\n    })\n  }\n  const uncompletedTasks = filteredTasks(sortedTasks, false)\n  const completedTasks = filteredTasks(sortedTasks, true)\n\n  return (\n    <PageContainer>\n      <Segment.Group className='TaskIndex'>\n        <DeleteConfirmModal\n          deleteModalOpen={deleteModalOpen}\n          handleCloseDeleteConfirm={handleCloseDeleteConfirm}\n          nameOfThingToDelete='Task'\n          handleDelete={deleteItem}\n        />\n        <Segment >\n          <Grid >\n            <Grid.Column >\n              <div className='task-index-header'>\n                <Header id='header-font-tasks' as='h1'>Tasks</Header>\n                <div className='task-add-btn'>\n                  <AddButton color='red' buttonText='Add a new Task' onClick={onClickAdd} />\n                </div>\n              </div>\n              <div className='search'>\n                <div className='ui fluid icon input'>\n                  <input type='text' placeholder='Search tasks...' name='search' value={search} onChange={handleSearch} />\n                  <i aria-hidden='true' className='search icon'></i>\n                </div>\n              </div>\n              <div className={formVisible ? 'task-form' : 'task-form-hidden'} >\n                <TaskEditComputer\n                  getData={getData}\n                  closeForm={closeForm}\n                  data={task}\n                  handleDeleteConfirmModal={handleDeleteConfirmModal}\n                />\n              </div>\n              <div className={addFormVisible ? 'task-form' : 'task-form-hidden'} >\n                <TaskAddComputer\n                  getData={getData}\n                  closeForm={closeAddForm}\n                />\n              </div>\n              <Header textAlign='left' as='h5'>Still To Complete</Header>\n              <hr />\n              <div className='uncompleted-tasks'>\n                {uncompletedTasks ?\n                  uncompletedTasks.map(task => (\n                    <TaskShow\n                      key={task.id}\n                      toggleCheckbox={toggleCheckbox}\n                      toggleForm={toggleForm}\n                      task={task} />\n                  )) : ''}\n              </div>\n              <br />\n              <Header textAlign='left' as='h5'>Completed</Header>\n              <hr />\n              <div className='completed-tasks'>\n                {completedTasks ?\n                  completedTasks.map(task => (\n                    <TaskShow\n                      key={task.id}\n                      toggleCheckbox={toggleCheckbox}\n                      toggleForm={toggleForm}\n                      task={task} />)) : ''}\n              </div>\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      </Segment.Group>\n    </PageContainer>\n  )\n}\nexport default TaskIndex","import { useHistory } from 'react-router-dom'\n\nfunction useDelete(deleteFunction, deleteId, page) {\n  const history = useHistory()\n\n  const deleteItem = async () => {\n    try {\n      await deleteFunction(deleteId)\n      history.push(`/${page}`)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return { deleteItem }\n}\n\nexport default useDelete","/* eslint-disable camelcase */\nimport React from 'react'\nimport { Form, Grid,  Header, Segment, Dropdown, Icon } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\n\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport TaskLabel from '../common/TaskLabel'\nimport { taskCategories } from './TaskCategories'\n\n\nfunction TaskFormMobile({ closeForm, jobOptions, formData, task, date, selectDropdown, handleChange, handleDateChange, deleteItem, handleSubmit }) {\n  \n  const taskPlaceholder = (<span><TaskLabel category={task.task_category.id} /></span>)\n\n  return (\n    <Segment.Group className=\"TaskFormMobile\" >\n      <Segment>\n        <Form size='large' onSubmit={handleSubmit}>\n          <Grid stackable textAlign='left' verticalAlign='middle'  >\n            <Grid.Row only='mobile'>\n              <Grid.Column className='top-row'>\n                <button className='btn-not-displayed'  onClick={closeForm}>\n                  <Icon name='close'  />\n                </button>\n                <Header as='h1' id='header-font-tasks' textAlign='center'>Update Task</Header>\n                <button className='btn-not-displayed'  onClick={deleteItem}>\n                  <Icon name='trash'  />\n                </button>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row1'>\n              <Grid.Column >\n                <Header size='small'>Task Title</Header>\n                <Form.Field >\n                  <FormInput\n                    fluidIcon='pencil alternate'\n                    iconPosition='left'\n                    placeholder='Title'\n                    value={formData.title}\n                    type='text'\n                    name='title'\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row2'>\n              <Grid.Column >\n                <Header size='small'>Task Category</Header>\n                <Form.Field >\n                  <Dropdown\n                    search\n                    clearable\n                    selection\n                    placeholder={taskPlaceholder}\n                    name='task_category'\n                    options={taskCategories}\n                    onChange={selectDropdown}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row3'>\n              <Grid.Column >\n                <Header size='small'>Related Job</Header>\n                <Form.Field >\n                  <Dropdown\n                    search\n                    clearable\n                    placeholder='Select applicable job...'\n                    value={formData.job}\n                    name='job'\n                    className='fluid'\n                    selection\n                    options={jobOptions}\n                    onChange={selectDropdown}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row4'>\n              <Grid.Column >\n                <Header size='small'>Notes</Header>\n                <Form.Field>\n                  <FormInput\n                    fluidIcon='pencil alternate'\n                    iconPosition='left'\n                    placeholder='Notes'\n                    value={formData.notes}\n                    type='text'\n                    name='notes'\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row5'>\n              <Grid.Column >\n                <Header size='small' textAlign='left'>Update Date Due</Header>\n                <Form.Field >\n                  <SemanticDatepicker onChange={handleDateChange}\n                    datePickerOnly\n                    clearable\n                    iconPosition='left'\n                    pointing='top right'\n                    name='reminder_date'\n                    format='DD-MM-YYYY'\n                    value={formData.reminder_date ? new Date(formData.reminder_date) : null}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row6'>\n              <Grid.Column >\n                <Form.Field >\n                  <p>{formData.reminder_date ? '' : 'Added:'}</p>\n                  {date ? date : formData.added_date}\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row7'>\n              <Grid.Column >\n                <FormButton\n                  color='red'\n                  buttonText='Update'\n                  type='submit'\n                ></FormButton>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </Segment>\n    </Segment.Group>\n  )\n}\nexport default TaskFormMobile","/* eslint-disable camelcase */\nimport React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport useWindowSize from '../../utils/useWindowSize'\nimport useForm from '../../utils/useForm'\nimport useDelete from '../../utils/useDelete'\nimport { getSingleTask, editTask, deleteTask, getAllJobs } from '../../lib/api'\n\nimport GetDate from '../common/GetDate'\nimport TaskFormMobile from './TaskFormMobile'\n\n\nfunction TaskEditMobile() {\n  const history = useHistory()\n  const { id: taskId } = useParams()\n  const { width } = useWindowSize()\n  const { deleteItem } = useDelete(deleteTask, taskId, 'tasks')\n  const [task, setTask] = React.useState(null)\n  const [jobs, setJobs] = React.useState(null)\n\n  // * Function to occur if the page edit has gone through \n  const onSubmitSuccess = () => {\n    history.push('/tasks/')\n    console.log('success')\n    \n  }\n\n  // * Values & functions taken from useForm & props passed to useForm\n  const { formData, handleChange, setFormData, selectDropdown, handleDateChange, handleSubmit } = useForm({\n    id: '',\n    completed: '',\n    notes: '',\n    added_date: '',\n    reminder_date: '',\n    task_category: '',\n    job: ''\n  }, editTask, taskId, onSubmitSuccess)\n\n  const getData = async () => {\n    try {\n      const res = await getSingleTask(taskId)\n      const task = res.data\n      setTask(task)\n      if (!task.job) {\n        setFormData({\n          ...task,\n          task_category: task.task_category.id\n        })\n      } else {\n        setFormData({\n          ...task,\n          job: task.job.id,\n          task_category: task.task_category.id\n        })\n      }\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  const getJobsData = async () => {\n    try {\n      const res = await getAllJobs()\n      setJobs(res.data)\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  React.useEffect(() => {\n    getData()\n    getJobsData()\n    if (width > 767) {\n      history.push('/tasks')\n    }\n  }, [width])\n\n\n\n  const toggleCheckbox = async () => {\n    setFormData({ ...formData, completed: !formData.completed })\n  }\n\n  const closeForm = () => {\n    history.push('/tasks')\n  }\n\n  if (!formData) return null\n  const { added_date, reminder_date } = formData\n  \n  if (!task) return null\n  \n  const dateProvided = () => {\n    if (reminder_date) {\n      return GetDate(reminder_date)\n    } else {\n      return GetDate(added_date)\n    }\n  }\n  const date = dateProvided(reminder_date, added_date)\n  \n  if (!jobs) return null\n  const jobOptions = jobs.map((job => {\n    return (\n      {\n        key: `${job.job_title} - ${job.company}`,\n        text: `${job.job_title} - ${job.company}`,\n        value: job.id\n      }\n    )\n  }))\n  \n  return (\n    <div className='TaskEdit'>\n      <TaskFormMobile\n        task={task}\n        date={date}\n        formData={formData}\n        closeForm={closeForm}\n        toggleCheckbox={toggleCheckbox}\n        jobOptions={jobOptions}\n        selectDropdown={selectDropdown}\n        handleChange={handleChange}\n        handleDateChange={handleDateChange}\n        deleteItem={deleteItem}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  )\n}\n\nexport default TaskEditMobile","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Grid, Header, Segment, Dropdown, Icon } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\n\nimport useForm from '../../utils/useForm'\nimport { getAllJobs, addNewTask } from '../../lib/api'\nimport FormInput from '../common/FormInput'\nimport FormButton from '../common/FormButton'\nimport { taskCategories } from './TaskCategories'\nimport useWindowSize from '../../utils/useWindowSize'\n\n\n\nfunction TaskAddMobile() {\n\n  const history = useHistory()\n  const [jobs, setJobs] = React.useState(null)\n  const { width } = useWindowSize()\n\n  const onSubmitSuccess = () => {\n    console.log('added')\n    history.push('/tasks')\n  }\n\n  const { formData, formErrors, handleChange, selectDropdown, handleDateChange, handleSubmit } = useForm({\n    title: '',\n    completed: false,\n    notes: '',\n    task_category: '',\n    job: '',\n    reminder_date: ''\n  }, addNewTask, null, onSubmitSuccess)\n\n  const getData = async () => {\n    try {\n      const res = await getAllJobs()\n      setJobs(res.data)\n    } catch (err) {\n      console.log(err)\n      history.push('/notfound')\n    }\n  }\n\n  React.useEffect(() => {\n    getData()\n    if (width > 767) history.push('/tasks/')\n  }, [width])\n\n  const closeForm = () => {\n    history.push('/tasks')\n  }\n\n  if (!jobs) return null\n  const jobOptions = jobs.map((job => {\n    return (\n      {\n        key: `${job.job_title} - ${job.company}`,\n        text: `${job.job_title} - ${job.company}`,\n        value: job.id\n      }\n    )\n  }))\n  \n\n  return (\n    <Segment.Group className='TaskFormMobile'>\n      <Segment>\n        <Form size='large' onSubmit={handleSubmit}>\n          <Grid stackable textAlign='left' verticalAlign='middle'  >\n            <Grid.Row only='mobile'>\n              <Grid.Column className='top-row-mobile'>\n                <button className='btn-not-displayed'  onClick={closeForm}>\n                  <Icon name='close'  />\n                </button>\n                <Header as='h1' id='header-font-tasks' textAlign='center'>Add Task</Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row1'>\n              <Grid.Column >\n                <Header size='small'>Task Title</Header>\n                <Form.Field >\n                  <FormInput\n                    fluidIcon='pencil alternate'\n                    iconPosition='left'\n                    placeholder='Title'\n                    value={formData.title}\n                    type='text'\n                    name='title'\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row2'>\n              <Grid.Column >\n                <Header size='small'>Task Category</Header>\n                <Form.Field >\n                  <Dropdown\n                    error={formErrors.task_category}\n                    search\n                    clearable\n                    selection\n                    placeholder='Task Category'\n                    name='task_category'\n                    options={taskCategories}\n                    onChange={selectDropdown}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row3'>\n              <Grid.Column >\n                <Header size='small'>Related Job</Header>\n                <Form.Field >\n                  <Dropdown\n                    search\n                    clearable\n                    placeholder='Select applicable job...'\n                    value={formData.job}\n                    name='job'\n                    className='fluid'\n                    selection\n                    options={jobOptions}\n                    onChange={selectDropdown}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row4'>\n              <Grid.Column >\n                <Header size='small'>Notes</Header>\n                <Form.Field >\n                  <FormInput\n                    fluidIcon='sticky note'\n                    iconPosition='left'\n                    placeholder='Notes'\n                    value={formData.notes}\n                    type='text'\n                    name='notes'\n                    onChange={handleChange}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile' className='row5'>\n              <Grid.Column >\n                <Header size='small'>Date Due</Header>\n                <Form.Field >\n                  <SemanticDatepicker onChange={handleDateChange}\n                    datePickerOnly\n                    clearable\n                    iconPosition='left'\n                    pointing='right'\n                    name='reminder_date'\n                    format='DD-MM-YYYY'\n                    value={formData.reminder_date ? new Date(formData.reminder_date) : null}\n                  />\n                </Form.Field>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row only='mobile'>\n              <Grid.Column>\n                <FormButton\n                  color='red'\n                  fluidSize='large'\n                  buttonText='Add Task'\n                  type='submit'\n                ></FormButton>\n              </Grid.Column>\n            </Grid.Row> \n          </Grid>\n        </Form>\n      </Segment>\n    </Segment.Group>\n  )\n}\nexport default TaskAddMobile","/* eslint-disable camelcase */\nimport React from 'react'\nimport { Icon } from 'semantic-ui-react'\n\nfunction ContactCard({ id, email, job, job_title, name, phone, company, handleDeleteConfirmModal }) {\n\n  return (\n    <div className='contact-card'>\n      <div className='contact-card-header'>\n        <div>\n          <p>{name}</p>\n          {!job ? '' : <p>{company}</p>}\n\n        </div>\n        <button value={id} onClick={handleDeleteConfirmModal} className='delete-contact-btn'>\n          <Icon name='trash' />\n        </button>\n      </div>\n      <div className='contact-card-content'>\n        <p>job title: {job_title}</p>\n        <p>email: {email}</p>\n        <p>phone: {phone}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactCard","import React from 'react'\nimport { Button, Modal, Header, Form, Icon, Dropdown } from 'semantic-ui-react'\nimport FormInput from '../common/FormInput'\n\nfunction ContactNewModal({\n  jobs,\n  modalOpen,\n  formData,\n  selectDropdown,\n  handleModalOpen,\n  handleModalClose,\n  handleChange,\n  handleSubmit\n}) {\n\n  if (!jobs) return null\n\n  const jobOptions = jobs.map((job => {\n    return (\n      {\n        key: `${job.job_title} - ${job.company}`,\n        text: `${job.job_title} - ${job.company}`,\n        value: job.id\n      }\n    )\n  }))\n\n  return (\n    <div>\n      <Modal open={modalOpen} onClose={handleModalClose} trigger={\n        <div className='contact-add-btn'>\n          <Button\n            basic\n            color='pink'\n            animated='fade'\n            className='fluid add-btn'\n            onClick={handleModalOpen}\n          >\n            <Button.Content visible>+</Button.Content>\n            <Button.Content hidden>Add a new Contact</Button.Content>\n          </Button>\n        </div>\n      } closeIcon>\n        <Header as='h3' className='add-contact' icon='user' size='small' content='Add contact' />\n        <Modal.Content>\n          <Form onSubmit={handleSubmit}>\n            <Form.Field>\n              <FormInput\n                className='fluid'\n                focus\n                placeholder='Name'\n                value={formData.name || ''}\n                type='text'\n                name='name'\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <FormInput\n                className='fluid'\n                focus\n                placeholder='Job title'\n                value={formData.job_title || ''}\n                type='text'\n                name='job_title'\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <FormInput\n                className='fluid'\n                focus\n                placeholder='Company'\n                value={formData.company || ''}\n                type='text'\n                name='company'\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <FormInput\n                className='fluid'\n                focus\n                placeholder='Email'\n                value={formData.email || ''}\n                type='text'\n                name='email'\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <FormInput\n                className='fluid'\n                focus\n                placeholder='Phone'\n                value={formData.phone || ''}\n                type='text'\n                name='phone'\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                search\n                placeholder='Select applicable job...'\n                value={formData.job || ''}\n                name='job'\n                className='fluid'\n                selection\n                options={jobOptions}\n                onChange={selectDropdown}\n              />\n            </Form.Field>\n            <br />\n            <Button\n              fluid\n              className='add-contact'\n              type='submit'\n            >\n            Add\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ContactNewModal","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Header } from 'semantic-ui-react'\n\nimport { getAllContacts, addNewContact, deleteContact, getAllJobs } from '../../lib/api'\nimport useForm from '../../utils/useForm'\nimport ContactCard from './ContactCard'\nimport ContactNewModal from './ContactNewModal'\nimport DeleteConfirmModal from '../common/DeleteConfirmModal'\n\n\nfunction ContactIndex() {\n  const [contacts, setContacts] = useState(null)\n  const [jobs, setJobs] = useState(null)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\n  const [contactToDelete, setContactToDelete] = useState(null)\n  const [search, setSearch] = useState('')\n  const history = useHistory()\n\n\n  const getData = async () => {\n    try {\n      const res = await getAllContacts()\n      const jobsRes = await getAllJobs()\n      setContacts(res.data)\n      setJobs(jobsRes.data)\n    } catch (err) {\n      history.push('/notfound')\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const onSubmitSuccess = () => {\n    formData.name = ''\n    formData.job_title = ''\n    formData.company = ''\n    formData.email = ''\n    formData.phone = ''\n    formData.job = ''\n    setModalOpen(false)\n    getData()\n  }\n\n  const { formData, handleChange, handleSubmit, selectDropdown } = useForm({\n    name: '',\n    job_title: '',\n    company: '',\n    email: '',\n    phone: '',\n    job: ''\n  }, addNewContact, null, onSubmitSuccess)\n\n  const handleModalOpen = () => {\n    setModalOpen(true)\n  }\n  const handleModalClose = () => {\n    setModalOpen(false)\n  }\n\n  const handleDeleteConfirmModal = e => {\n    e.preventDefault()\n    setContactToDelete(e.currentTarget.value)\n    setDeleteModalOpen(true)\n  }\n\n  const handleCloseDeleteConfirm = () => {\n    setDeleteModalOpen(false)\n  }\n\n  const handleDeleteContact = async e => {\n    e.preventDefault()\n    try {\n      await deleteContact(contactToDelete)\n      setDeleteModalOpen(false)\n    } catch (err) {\n      console.log(err)\n    }\n    getData()\n  }\n\n  const handleSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredContacts = () => {\n    const regexp = new RegExp(search, 'i')\n    return contacts.filter(contact => {\n      if (!contact.job) {\n        return regexp.test(contact.name) || regexp.test(contact.job_title)\n      } else {\n        return regexp.test(contact.name) || regexp.test(contact.job_title) || regexp.test(contact.job.company)\n      }\n    })\n  }\n\n  if (!contacts) return null\n\n  return (\n    <>\n      <Header id='header-font-contacts' as='h1' >Contacts</Header>\n      <DeleteConfirmModal\n        deleteModalOpen={deleteModalOpen}\n        handleCloseDeleteConfirm={handleCloseDeleteConfirm}\n        nameOfThingToDelete='Contact'\n        handleDelete={handleDeleteContact}\n      />\n      <ContactNewModal\n        jobs={jobs}\n        modalOpen={modalOpen}\n        formData={formData}\n        selectDropdown={selectDropdown}\n        handleModalOpen={handleModalOpen}\n        handleModalClose={handleModalClose}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <div className='search-box'>\n        <div className='ui fluid icon input'>\n          <input type='text' placeholder='Search contacts...' name='search' value={search} onChange={handleSearch} />\n          <i aria-hidden='true' className='search icon'></i>\n        </div>\n      </div>\n      <section className='ContactIndex'>\n        {filteredContacts().map((contact => (\n          <ContactCard\n            key={contact.id}\n            handleDeleteConfirmModal={handleDeleteConfirmModal}\n            {...contact}\n          />\n        )))}\n      </section>\n    </>\n  )\n}\n\nexport default ContactIndex","import React from 'react'\nimport { Icon } from 'semantic-ui-react'\n\nfunction ResourceCard({ id, title, url, handleDeleteConfirmModal }) {\n\n  return (\n    <div className='resource-card'>\n      <div className='resource-card-header'>\n        <p>{title}</p>\n        <button value={id} onClick={handleDeleteConfirmModal} className='delete-resource-btn'>\n          <Icon name='trash' />\n        </button>\n      </div>\n      <div className='resource-card-content'>\n        <a href={url} target='_blank' rel=\"noopener noreferrer\" >{url}</a>\n      </div>\n    </div>\n  )\n}\n\nexport default ResourceCard","import React from 'react'\nimport { Button, Modal, Header, Form, Icon } from 'semantic-ui-react'\nimport FormInput from '../common/FormInput'\n\nfunction ResourceNewModal({\n  modalOpen,\n  formData,\n  handleModalOpen,\n  handleModalClose,\n  handleChange,\n  handleSubmit\n}) {\n  return (\n    <div>\n      <Modal open={modalOpen} onClose={handleModalClose} trigger={\n        <div className='resource-add-btn'>\n          <Button\n            basic\n            color='orange'\n            animated='fade'\n            className='fluid add-btn'\n            onClick={handleModalOpen}\n          >\n            <Button.Content visible>+</Button.Content>\n            <Button.Content hidden>Add a new Resource</Button.Content>\n          </Button>\n        </div>\n      } closeIcon>\n        <Header as='h3' className='add-resource' icon='at' content='add resource' />\n        <Modal.Content>\n          <Form onSubmit={handleSubmit}>\n            <FormInput\n              className='fluid'\n              focus\n              placeholder='resource title...'\n              value={formData.title || ''}\n              type='text'\n              name='title'\n              onChange={handleChange}\n            />\n            <FormInput\n              className='fluid'\n              focus\n              placeholder='link...'\n              value={formData.url || ''}\n              type='text'\n              name='url'\n              onChange={handleChange}\n            />\n            <Button\n              fluid\n              className='add-resource'\n              type='submit'\n            >\n              Add\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ResourceNewModal","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Header } from 'semantic-ui-react'\n\nimport { getAllResources, addNewResource, deleteResource } from '../../lib/api'\nimport useForm from '../../utils/useForm'\nimport ResourceCard from './ResourceCard'\nimport ResourceNewModal from './ResourceNewModal'\nimport DeleteConfirmModal from '../common/DeleteConfirmModal'\n\n\nfunction ResourceIndex() {\n  const [resources, setResources] = useState(null)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\n  const [resourceToDelete, setResourceToDelete] = useState(null)\n  const [search, setSearch] = useState('')\n  const history = useHistory()\n\n\n\n  const getData = async () => {\n    try {\n      const res = await getAllResources()\n      setResources(res.data)\n    } catch (err) {\n      history.push('/notfound')\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const onSubmitSuccess = () => {\n    formData.title = ''\n    formData.url = ''\n    setModalOpen(false)\n    getData()\n  }\n\n  const { formData, handleChange, handleSubmit } = useForm({\n    url: '',\n    title: ''\n  }, addNewResource, null, onSubmitSuccess)\n\n  const handleModalOpen = () => {\n    setModalOpen(true)\n  }\n  const handleModalClose = () => {\n    setModalOpen(false)\n  }\n\n  const handleDeleteConfirmModal = e => {\n    e.preventDefault()\n    setResourceToDelete(e.currentTarget.value)\n    setDeleteModalOpen(true)\n  }\n\n  const handleCloseDeleteConfirm = () => {\n    setDeleteModalOpen(false)\n  }\n\n  const handleDeleteResource = async e => {\n    e.preventDefault()\n    try {\n      await deleteResource(resourceToDelete)\n      setDeleteModalOpen(false)\n    } catch (err) {\n      console.log(err)\n    }\n    getData()\n  }\n\n  const handleSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredResources = () => {\n    const regexp = new RegExp(search, 'i')\n    return resources.filter(resource => {\n      return regexp.test(resource.title) || regexp.test(resource.link)\n    })\n  }\n\n  if (!resources) return null\n\n  return (\n    <>\n      <Header id='header-font-resources' as='h1' >Resources</Header>\n      <DeleteConfirmModal\n        deleteModalOpen={deleteModalOpen}\n        handleCloseDeleteConfirm={handleCloseDeleteConfirm}\n        nameOfThingToDelete='Resource'\n        handleDelete={handleDeleteResource}\n      />\n      <ResourceNewModal\n        modalOpen={modalOpen}\n        formData={formData}\n        handleModalOpen={handleModalOpen}\n        handleModalClose={handleModalClose}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n      <div className='search-box'>\n        <div className='ui fluid icon input'>\n          <input type='text' placeholder='Search resources...' name='search' value={search} onChange={handleSearch} />\n          <i aria-hidden='true' className='search icon'></i>\n        </div>\n      </div>\n      <section className='ResourceIndex'>\n        {filteredResources().map((resource => (\n          <ResourceCard\n            key={resource.id}\n            handleDeleteConfirmModal={handleDeleteConfirmModal}\n            {...resource}\n          />\n        )))}\n      </section>\n    </>\n  )\n}\n\nexport default ResourceIndex","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\n// Common imports\nimport Home from './components/common/Home'\nimport Navbar from './components/common/Navbar'\nimport ErrorPage from './components/common/ErrorPage'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\n\n// Job imports\nimport JobIndex from './components/jobs/JobIndex'\nimport JobShow from './components/jobs/JobShow'\nimport JobNew from './components/jobs/JobNew'\nimport JobEdit from './components/jobs/JobEdit'\n\n// Task imports\nimport TaskIndex from './components/tasks/TaskIndex'\nimport TaskEditMobile from './components/tasks/TaskEditMobile'\nimport TaskAddMobile from './components/tasks/TaskAddMobile'\n\n// Contact imports\nimport ContactIndex from './components/contacts/ContactIndex'\n\n// Resources imports\nimport ResourceIndex from './components/resources/ResourceIndex'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/jobs/new' component={JobNew} />\n        <Route path='/jobs/:id/edit' component={JobEdit} />\n        <Route path='/jobs/:id' component={JobShow} />\n        <Route path='/jobs' component={JobIndex} />\n        <Route path='/tasks/new' component={TaskAddMobile} />\n        <Route path='/tasks/:id' component={TaskEditMobile} />\n        <Route path='/tasks' component={TaskIndex} />\n        <Route path='/contacts' component={ContactIndex} />\n        <Route path='/resources' component={ResourceIndex} />\n        <Route path=\"/*\" component={ErrorPage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}